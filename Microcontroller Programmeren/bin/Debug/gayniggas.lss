
bin\Debug\gayniggas.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000226  000002ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000226  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000002ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  000002bd  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000058  00000000  00000000  00000310  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000d6d  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000c33  00000000  00000000  000010d5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000240  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000000f4  00000000  00000000  00001f48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000540  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000152  00000000  00000000  0000257c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
  f8:	0c 94 11 01 	jmp	0x222	; 0x222 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init_led>:
// Using prescaler of 256: 8000000 / 256 = 31250
// Init TCNT to 2^16 - 31250 = 34286
#define TCNT_INIT 34286

void init_led(void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
	DDRB |= (1<<PB7);
 108:	84 e2       	ldi	r24, 0x24	; 36
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	fc 01       	movw	r30, r24
 10e:	20 81       	ld	r18, Z
 110:	84 e2       	ldi	r24, 0x24	; 36
 112:	90 e0       	ldi	r25, 0x00	; 0

00000114 <.Loc.2>:
 114:	20 68       	ori	r18, 0x80	; 128
 116:	fc 01       	movw	r30, r24
 118:	20 83       	st	Z, r18

0000011a <.Loc.3>:
	PORTB |= (1<<PB7);
 11a:	85 e2       	ldi	r24, 0x25	; 37
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	fc 01       	movw	r30, r24
 120:	20 81       	ld	r18, Z
 122:	85 e2       	ldi	r24, 0x25	; 37
 124:	90 e0       	ldi	r25, 0x00	; 0

00000126 <.Loc.4>:
 126:	20 68       	ori	r18, 0x80	; 128
 128:	fc 01       	movw	r30, r24
 12a:	20 83       	st	Z, r18

0000012c <.Loc.5>:
}
 12c:	00 00       	nop
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <init_timer1>:

void init_timer1(void)
{
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	cd b7       	in	r28, 0x3d	; 61
 13a:	de b7       	in	r29, 0x3e	; 62

0000013c <.Loc.7>:
	TCCR1A = 0;
 13c:	80 e8       	ldi	r24, 0x80	; 128
 13e:	90 e0       	ldi	r25, 0x00	; 0

00000140 <.Loc.8>:
 140:	fc 01       	movw	r30, r24
 142:	10 82       	st	Z, r1

00000144 <.Loc.9>:
	TCCR1B = (1<<CS12) | (0<<CS11) | (0<<CS10);
 144:	81 e8       	ldi	r24, 0x81	; 129
 146:	90 e0       	ldi	r25, 0x00	; 0

00000148 <.Loc.10>:
 148:	24 e0       	ldi	r18, 0x04	; 4
 14a:	fc 01       	movw	r30, r24
 14c:	20 83       	st	Z, r18

0000014e <.Loc.11>:
	TCNT1 = TCNT_INIT;
 14e:	84 e8       	ldi	r24, 0x84	; 132
 150:	90 e0       	ldi	r25, 0x00	; 0

00000152 <.Loc.12>:
 152:	2e ee       	ldi	r18, 0xEE	; 238
 154:	35 e8       	ldi	r19, 0x85	; 133
 156:	fc 01       	movw	r30, r24
 158:	31 83       	std	Z+1, r19	; 0x01
 15a:	20 83       	st	Z, r18

0000015c <.Loc.13>:
}
 15c:	00 00       	nop
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <init>:

void init(void)
{
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62

0000016c <.Loc.15>:
	init_led();
 16c:	0e 94 80 00 	call	0x100	; 0x100 <init_led>

00000170 <.Loc.16>:
	init_timer1();
 170:	0e 94 9a 00 	call	0x134	; 0x134 <init_timer1>

00000174 <.Loc.17>:
}
 174:	00 00       	nop
 176:	df 91       	pop	r29
 178:	cf 91       	pop	r28
 17a:	08 95       	ret

0000017c <led_D1_on>:

void led_D1_on(void)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62

00000184 <.Loc.19>:
	PORTB &= ~(1<<PB7);
 184:	85 e2       	ldi	r24, 0x25	; 37
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	fc 01       	movw	r30, r24
 18a:	20 81       	ld	r18, Z

0000018c <.Loc.20>:
 18c:	85 e2       	ldi	r24, 0x25	; 37
 18e:	90 e0       	ldi	r25, 0x00	; 0

00000190 <.Loc.21>:
 190:	2f 77       	andi	r18, 0x7F	; 127
 192:	fc 01       	movw	r30, r24
 194:	20 83       	st	Z, r18

00000196 <.Loc.22>:
}
 196:	00 00       	nop
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <led_D1_off>:

void led_D1_off(void)
{
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	cd b7       	in	r28, 0x3d	; 61
 1a4:	de b7       	in	r29, 0x3e	; 62

000001a6 <.Loc.24>:
	PORTB |= (1<<PB7);
 1a6:	85 e2       	ldi	r24, 0x25	; 37
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	fc 01       	movw	r30, r24
 1ac:	20 81       	ld	r18, Z
 1ae:	85 e2       	ldi	r24, 0x25	; 37
 1b0:	90 e0       	ldi	r25, 0x00	; 0

000001b2 <.Loc.25>:
 1b2:	20 68       	ori	r18, 0x80	; 128
 1b4:	fc 01       	movw	r30, r24
 1b6:	20 83       	st	Z, r18

000001b8 <.Loc.26>:
}
 1b8:	00 00       	nop
 1ba:	df 91       	pop	r29
 1bc:	cf 91       	pop	r28
 1be:	08 95       	ret

000001c0 <led_D1_toggle>:

void led_D1_toggle(void)
{
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	cd b7       	in	r28, 0x3d	; 61
 1c6:	de b7       	in	r29, 0x3e	; 62

000001c8 <.Loc.28>:
	PORTB ^= (1<<PB7);
 1c8:	85 e2       	ldi	r24, 0x25	; 37
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	fc 01       	movw	r30, r24
 1ce:	30 81       	ld	r19, Z
 1d0:	85 e2       	ldi	r24, 0x25	; 37
 1d2:	90 e0       	ldi	r25, 0x00	; 0

000001d4 <.Loc.29>:
 1d4:	20 e8       	ldi	r18, 0x80	; 128
 1d6:	23 27       	eor	r18, r19
 1d8:	fc 01       	movw	r30, r24
 1da:	20 83       	st	Z, r18

000001dc <.Loc.30>:
}
 1dc:	00 00       	nop
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <main>:

int main(void)
{
 1e4:	cf 93       	push	r28
 1e6:	df 93       	push	r29
 1e8:	cd b7       	in	r28, 0x3d	; 61
 1ea:	de b7       	in	r29, 0x3e	; 62

000001ec <.Loc.32>:
	init();
 1ec:	0e 94 b2 00 	call	0x164	; 0x164 <init>

000001f0 <.L9>:

	while (1)
	{
		if (TIFR1 & (1<<TOV1))
 1f0:	86 e3       	ldi	r24, 0x36	; 54
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	fc 01       	movw	r30, r24
 1f6:	80 81       	ld	r24, Z

000001f8 <.Loc.34>:
 1f8:	88 2f       	mov	r24, r24
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	81 70       	andi	r24, 0x01	; 1
 1fe:	99 27       	eor	r25, r25

00000200 <.Loc.35>:
 200:	00 97       	sbiw	r24, 0x00	; 0
 202:	b1 f3       	breq	.-20     	; 0x1f0 <.L9>

00000204 <.Loc.36>:
		{
			// Re-init tcnt
			TCNT1 = TCNT_INIT;
 204:	84 e8       	ldi	r24, 0x84	; 132
 206:	90 e0       	ldi	r25, 0x00	; 0

00000208 <.Loc.37>:
 208:	2e ee       	ldi	r18, 0xEE	; 238
 20a:	35 e8       	ldi	r19, 0x85	; 133
 20c:	fc 01       	movw	r30, r24
 20e:	31 83       	std	Z+1, r19	; 0x01
 210:	20 83       	st	Z, r18

00000212 <.Loc.38>:
			// Clear flag
			TIFR1 = (1<<TOV1);
 212:	86 e3       	ldi	r24, 0x36	; 54
 214:	90 e0       	ldi	r25, 0x00	; 0

00000216 <.Loc.39>:
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	fc 01       	movw	r30, r24
 21a:	20 83       	st	Z, r18

0000021c <.Loc.40>:
			// Toggle led D1
			led_D1_toggle();
 21c:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <led_D1_toggle>

00000220 <.Loc.41>:
		if (TIFR1 & (1<<TOV1))
 220:	e7 cf       	rjmp	.-50     	; 0x1f0 <.L9>

00000222 <_exit>:
 222:	f8 94       	cli

00000224 <__stop_program>:
 224:	ff cf       	rjmp	.-2      	; 0x224 <__stop_program>
