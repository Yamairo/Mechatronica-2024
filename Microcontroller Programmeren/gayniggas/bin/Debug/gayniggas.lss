
bin\Debug\gayniggas.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000073a  000007ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000073a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  000007ee  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000007ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000007f1  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000804  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00000848  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001016  00000000  00000000  00000920  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000dfe  00000000  00000000  00001936  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000505  00000000  00000000  00002734  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000130  00000000  00000000  00002c3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000057b  00000000  00000000  00002d6c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000019e  00000000  00000000  000032e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  54:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 88 00 	call	0x110	; 0x110 <main>
 108:	0c 94 9b 03 	jmp	0x736	; 0x736 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <main>:

int main() {
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62

00000118 <.Loc.1>:
    //initA();
    //initB();
    initC();
 118:	0e 94 fd 00 	call	0x1fa	; 0x1fa <initC>

0000011c <.L2>:
    while(1) {
        //opdrachtA();
        //opdrachtB();
        opdrachtC();
 11c:	0e 94 17 01 	call	0x22e	; 0x22e <opdrachtC>

00000120 <.LBE2>:
    while(1) {
 120:	00 00       	nop
 122:	fc cf       	rjmp	.-8      	; 0x11c <.L2>

00000124 <initA>:
#define D4 PB4
#define S1 PF1
#define S2 PF2
#define S3 PF3

void initA(){
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62

0000012c <.Loc.1>:
    DDRB |= (1 << D1) | (1 << D3);
 12c:	84 e2       	ldi	r24, 0x24	; 36
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	fc 01       	movw	r30, r24
 132:	20 81       	ld	r18, Z
 134:	84 e2       	ldi	r24, 0x24	; 36
 136:	90 e0       	ldi	r25, 0x00	; 0

00000138 <.Loc.2>:
 138:	20 6a       	ori	r18, 0xA0	; 160
 13a:	fc 01       	movw	r30, r24
 13c:	20 83       	st	Z, r18

0000013e <.Loc.3>:
    PORTB &= ~(1 << D1);
 13e:	85 e2       	ldi	r24, 0x25	; 37
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	fc 01       	movw	r30, r24
 144:	20 81       	ld	r18, Z

00000146 <.Loc.4>:
 146:	85 e2       	ldi	r24, 0x25	; 37
 148:	90 e0       	ldi	r25, 0x00	; 0

0000014a <.Loc.5>:
 14a:	2f 77       	andi	r18, 0x7F	; 127
 14c:	fc 01       	movw	r30, r24
 14e:	20 83       	st	Z, r18

00000150 <.Loc.6>:
}
 150:	00 00       	nop
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <opdrachtA>:

void opdrachtA(void) {
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	cd b7       	in	r28, 0x3d	; 61
 15e:	de b7       	in	r29, 0x3e	; 62

00000160 <.Loc.8>:
    if(!(PINF & (1 << S1))) {
 160:	8f e2       	ldi	r24, 0x2F	; 47
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	fc 01       	movw	r30, r24
 166:	80 81       	ld	r24, Z

00000168 <.Loc.9>:
 168:	88 2f       	mov	r24, r24
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	82 70       	andi	r24, 0x02	; 2
 16e:	99 27       	eor	r25, r25

00000170 <.Loc.10>:
 170:	00 97       	sbiw	r24, 0x00	; 0
 172:	51 f4       	brne	.+20     	; 0x188 <.L3>

00000174 <.Loc.11>:
        DDRB |= (1 << D1);
 174:	84 e2       	ldi	r24, 0x24	; 36
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	fc 01       	movw	r30, r24
 17a:	20 81       	ld	r18, Z
 17c:	84 e2       	ldi	r24, 0x24	; 36
 17e:	90 e0       	ldi	r25, 0x00	; 0

00000180 <.Loc.12>:
 180:	20 68       	ori	r18, 0x80	; 128
 182:	fc 01       	movw	r30, r24
 184:	20 83       	st	Z, r18

00000186 <.Loc.13>:
    } else {
        DDRB &= ~(1 << D1);
    }
}
 186:	09 c0       	rjmp	.+18     	; 0x19a <.L5>

00000188 <.L3>:
        DDRB &= ~(1 << D1);
 188:	84 e2       	ldi	r24, 0x24	; 36
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	fc 01       	movw	r30, r24
 18e:	20 81       	ld	r18, Z

00000190 <.Loc.15>:
 190:	84 e2       	ldi	r24, 0x24	; 36
 192:	90 e0       	ldi	r25, 0x00	; 0

00000194 <.Loc.16>:
 194:	2f 77       	andi	r18, 0x7F	; 127
 196:	fc 01       	movw	r30, r24
 198:	20 83       	st	Z, r18

0000019a <.L5>:
}
 19a:	00 00       	nop
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	08 95       	ret

000001a2 <initB>:
#define D4 PB4
#define S1 PF1
#define S2 PF2
#define S3 PF3

void initB(){
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	cd b7       	in	r28, 0x3d	; 61
 1a8:	de b7       	in	r29, 0x3e	; 62

000001aa <.Loc.1>:
    DDRB |= (1 << D1) | (1 << D2);
 1aa:	84 e2       	ldi	r24, 0x24	; 36
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	fc 01       	movw	r30, r24
 1b0:	20 81       	ld	r18, Z
 1b2:	84 e2       	ldi	r24, 0x24	; 36
 1b4:	90 e0       	ldi	r25, 0x00	; 0

000001b6 <.Loc.2>:
 1b6:	20 6c       	ori	r18, 0xC0	; 192
 1b8:	fc 01       	movw	r30, r24
 1ba:	20 83       	st	Z, r18

000001bc <.Loc.3>:
}
 1bc:	00 00       	nop
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <opdrachtB>:

void opdrachtB(void) {
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	cd b7       	in	r28, 0x3d	; 61
 1ca:	de b7       	in	r29, 0x3e	; 62

000001cc <.Loc.5>:
    if(!(PINF & (1 << S2))) {
 1cc:	8f e2       	ldi	r24, 0x2F	; 47
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	fc 01       	movw	r30, r24
 1d2:	80 81       	ld	r24, Z

000001d4 <.Loc.6>:
 1d4:	88 2f       	mov	r24, r24
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	84 70       	andi	r24, 0x04	; 4
 1da:	99 27       	eor	r25, r25

000001dc <.Loc.7>:
 1dc:	00 97       	sbiw	r24, 0x00	; 0
 1de:	49 f4       	brne	.+18     	; 0x1f2 <.L4>

000001e0 <.Loc.8>:
        PORTB |= (1 << D2);
 1e0:	85 e2       	ldi	r24, 0x25	; 37
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	fc 01       	movw	r30, r24
 1e6:	20 81       	ld	r18, Z
 1e8:	85 e2       	ldi	r24, 0x25	; 37
 1ea:	90 e0       	ldi	r25, 0x00	; 0

000001ec <.Loc.9>:
 1ec:	20 64       	ori	r18, 0x40	; 64
 1ee:	fc 01       	movw	r30, r24
 1f0:	20 83       	st	Z, r18

000001f2 <.L4>:
    }
}
 1f2:	00 00       	nop
 1f4:	df 91       	pop	r29
 1f6:	cf 91       	pop	r28
 1f8:	08 95       	ret

000001fa <initC>:
#define S2 PF2
#define S3 PF3

volatile int knopIngedrukt = 0;

void initC(){
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	cd b7       	in	r28, 0x3d	; 61
 200:	de b7       	in	r29, 0x3e	; 62

00000202 <.Loc.1>:
    DDRB |= (1 << D1) | (1 << D4);
 202:	84 e2       	ldi	r24, 0x24	; 36
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	fc 01       	movw	r30, r24
 208:	20 81       	ld	r18, Z
 20a:	84 e2       	ldi	r24, 0x24	; 36
 20c:	90 e0       	ldi	r25, 0x00	; 0

0000020e <.Loc.2>:
 20e:	20 69       	ori	r18, 0x90	; 144
 210:	fc 01       	movw	r30, r24
 212:	20 83       	st	Z, r18

00000214 <.Loc.3>:

    PORTB |= (1 << D4);
 214:	85 e2       	ldi	r24, 0x25	; 37
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	fc 01       	movw	r30, r24
 21a:	20 81       	ld	r18, Z
 21c:	85 e2       	ldi	r24, 0x25	; 37
 21e:	90 e0       	ldi	r25, 0x00	; 0

00000220 <.Loc.4>:
 220:	20 61       	ori	r18, 0x10	; 16
 222:	fc 01       	movw	r30, r24
 224:	20 83       	st	Z, r18

00000226 <.Loc.5>:
}
 226:	00 00       	nop
 228:	df 91       	pop	r29
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <opdrachtC>:

void opdrachtC(void) {
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	cd b7       	in	r28, 0x3d	; 61
 234:	de b7       	in	r29, 0x3e	; 62
 236:	c4 54       	subi	r28, 0x44	; 68
 238:	d1 09       	sbc	r29, r1
 23a:	0f b6       	in	r0, 0x3f	; 63
 23c:	f8 94       	cli
 23e:	de bf       	out	0x3e, r29	; 62
 240:	0f be       	out	0x3f, r0	; 63
 242:	cd bf       	out	0x3d, r28	; 61

00000244 <.Loc.7>:
    if(!(PINF & (1 << S2))) {
 244:	8f e2       	ldi	r24, 0x2F	; 47
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	dc 01       	movw	r26, r24
 24a:	8c 91       	ld	r24, X

0000024c <.Loc.8>:
 24c:	88 2f       	mov	r24, r24
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	84 70       	andi	r24, 0x04	; 4
 252:	99 27       	eor	r25, r25

00000254 <.Loc.9>:
 254:	00 97       	sbiw	r24, 0x00	; 0
 256:	09 f0       	breq	.+2      	; 0x25a <.Loc.10>

00000258 <L0^A>:
 258:	a7 c0       	rjmp	.+334    	; 0x3a8 <.L3>

0000025a <.Loc.10>:
        if(!knopIngedrukt) {
 25a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <knopIngedrukt>
 25e:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <knopIngedrukt+0x1>

00000262 <.Loc.11>:
 262:	00 97       	sbiw	r24, 0x00	; 0
 264:	09 f0       	breq	.+2      	; 0x268 <.Loc.12>

00000266 <L0^A>:
 266:	41 c1       	rjmp	.+642    	; 0x4ea <.L29>

00000268 <.Loc.12>:
            PORTB ^= (1 << D4);
 268:	85 e2       	ldi	r24, 0x25	; 37
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	fc 01       	movw	r30, r24
 26e:	30 81       	ld	r19, Z
 270:	85 e2       	ldi	r24, 0x25	; 37
 272:	90 e0       	ldi	r25, 0x00	; 0

00000274 <.Loc.13>:
 274:	20 e1       	ldi	r18, 0x10	; 16
 276:	23 27       	eor	r18, r19
 278:	dc 01       	movw	r26, r24
 27a:	2c 93       	st	X, r18
 27c:	80 e0       	ldi	r24, 0x00	; 0
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	a0 ea       	ldi	r26, 0xA0	; 160
 282:	b1 e4       	ldi	r27, 0x41	; 65
 284:	89 83       	std	Y+1, r24	; 0x01
 286:	9a 83       	std	Y+2, r25	; 0x02
 288:	ab 83       	std	Y+3, r26	; 0x03
 28a:	bc 83       	std	Y+4, r27	; 0x04

0000028c <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	30 e0       	ldi	r19, 0x00	; 0
 290:	4a e7       	ldi	r20, 0x7A	; 122
 292:	55 e4       	ldi	r21, 0x45	; 69
 294:	69 81       	ldd	r22, Y+1	; 0x01
 296:	7a 81       	ldd	r23, Y+2	; 0x02
 298:	8b 81       	ldd	r24, Y+3	; 0x03
 29a:	9c 81       	ldd	r25, Y+4	; 0x04
 29c:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 2a0:	6d a3       	std	Y+37, r22	; 0x25
 2a2:	7e a3       	std	Y+38, r23	; 0x26
 2a4:	8f a3       	std	Y+39, r24	; 0x27
 2a6:	98 a7       	std	Y+40, r25	; 0x28
 2a8:	8d a1       	ldd	r24, Y+37	; 0x25
 2aa:	9e a1       	ldd	r25, Y+38	; 0x26
 2ac:	af a1       	ldd	r26, Y+39	; 0x27
 2ae:	b8 a5       	ldd	r27, Y+40	; 0x28
 2b0:	8d 83       	std	Y+5, r24	; 0x05
 2b2:	9e 83       	std	Y+6, r25	; 0x06
 2b4:	af 83       	std	Y+7, r26	; 0x07
 2b6:	b8 87       	std	Y+8, r27	; 0x08

000002b8 <.Loc.15>:
	if (__tmp < 1.0)
 2b8:	20 e0       	ldi	r18, 0x00	; 0
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	40 e8       	ldi	r20, 0x80	; 128
 2be:	5f e3       	ldi	r21, 0x3F	; 63
 2c0:	6d 81       	ldd	r22, Y+5	; 0x05
 2c2:	7e 81       	ldd	r23, Y+6	; 0x06
 2c4:	8f 81       	ldd	r24, Y+7	; 0x07
 2c6:	98 85       	ldd	r25, Y+8	; 0x08
 2c8:	0e 94 80 02 	call	0x500	; 0x500 <__cmpsf2>
 2cc:	88 23       	and	r24, r24
 2ce:	2c f4       	brge	.+10     	; 0x2da <.L25>

000002d0 <.Loc.16>:
		__ticks = 1;
 2d0:	81 e0       	ldi	r24, 0x01	; 1
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	9a 87       	std	Y+10, r25	; 0x0a
 2d6:	89 87       	std	Y+9, r24	; 0x09
 2d8:	55 c0       	rjmp	.+170    	; 0x384 <.L7>

000002da <.L25>:
	else if (__tmp > 65535)
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	3f ef       	ldi	r19, 0xFF	; 255
 2de:	4f e7       	ldi	r20, 0x7F	; 127
 2e0:	57 e4       	ldi	r21, 0x47	; 71
 2e2:	6d 81       	ldd	r22, Y+5	; 0x05
 2e4:	7e 81       	ldd	r23, Y+6	; 0x06
 2e6:	8f 81       	ldd	r24, Y+7	; 0x07
 2e8:	98 85       	ldd	r25, Y+8	; 0x08
 2ea:	0e 94 01 03 	call	0x602	; 0x602 <__gesf2>
 2ee:	88 23       	and	r24, r24
 2f0:	d9 f1       	breq	.+118    	; 0x368 <.L26>
 2f2:	d4 f1       	brlt	.+116    	; 0x368 <.L26>

000002f4 <.Loc.18>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e2       	ldi	r20, 0x20	; 32
 2fa:	51 e4       	ldi	r21, 0x41	; 65
 2fc:	69 81       	ldd	r22, Y+1	; 0x01
 2fe:	7a 81       	ldd	r23, Y+2	; 0x02
 300:	8b 81       	ldd	r24, Y+3	; 0x03
 302:	9c 81       	ldd	r25, Y+4	; 0x04
 304:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 308:	69 a7       	std	Y+41, r22	; 0x29
 30a:	7a a7       	std	Y+42, r23	; 0x2a
 30c:	8b a7       	std	Y+43, r24	; 0x2b
 30e:	9c a7       	std	Y+44, r25	; 0x2c
 310:	89 a5       	ldd	r24, Y+41	; 0x29
 312:	9a a5       	ldd	r25, Y+42	; 0x2a
 314:	ab a5       	ldd	r26, Y+43	; 0x2b
 316:	bc a5       	ldd	r27, Y+44	; 0x2c
 318:	8d 8f       	std	Y+29, r24	; 0x1d
 31a:	9e 8f       	std	Y+30, r25	; 0x1e
 31c:	af 8f       	std	Y+31, r26	; 0x1f
 31e:	b8 a3       	std	Y+32, r27	; 0x20

00000320 <.Loc.19>:
 320:	6d 8d       	ldd	r22, Y+29	; 0x1d
 322:	7e 8d       	ldd	r23, Y+30	; 0x1e
 324:	8f 8d       	ldd	r24, Y+31	; 0x1f
 326:	98 a1       	ldd	r25, Y+32	; 0x20
 328:	0e 94 85 02 	call	0x50a	; 0x50a <__fixunssfsi>
 32c:	6d a7       	std	Y+45, r22	; 0x2d
 32e:	7e a7       	std	Y+46, r23	; 0x2e
 330:	8f a7       	std	Y+47, r24	; 0x2f
 332:	98 ab       	std	Y+48, r25	; 0x30
 334:	ad a5       	ldd	r26, Y+45	; 0x2d
 336:	be a5       	ldd	r27, Y+46	; 0x2e
 338:	ba 87       	std	Y+10, r27	; 0x0a
 33a:	a9 87       	std	Y+9, r26	; 0x09

0000033c <.Loc.20>:
		while(__ticks)
 33c:	10 c0       	rjmp	.+32     	; 0x35e <.L10>

0000033e <.L11>:
 33e:	80 e9       	ldi	r24, 0x90	; 144
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	9c 87       	std	Y+12, r25	; 0x0c
 344:	8b 87       	std	Y+11, r24	; 0x0b

00000346 <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 346:	8b 85       	ldd	r24, Y+11	; 0x0b
 348:	9c 85       	ldd	r25, Y+12	; 0x0c

0000034a <.L1^B1>:
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <.L1^B1>
 34e:	9c 87       	std	Y+12, r25	; 0x0c
 350:	8b 87       	std	Y+11, r24	; 0x0b

00000352 <.Loc.22>:
	...

00000354 <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 354:	89 85       	ldd	r24, Y+9	; 0x09
 356:	9a 85       	ldd	r25, Y+10	; 0x0a
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	9a 87       	std	Y+10, r25	; 0x0a
 35c:	89 87       	std	Y+9, r24	; 0x09

0000035e <.L10>:
		while(__ticks)
 35e:	89 85       	ldd	r24, Y+9	; 0x09
 360:	9a 85       	ldd	r25, Y+10	; 0x0a
 362:	00 97       	sbiw	r24, 0x00	; 0
 364:	61 f7       	brne	.-40     	; 0x33e <.L11>

00000366 <.Loc.25>:
		}
		return;
 366:	19 c0       	rjmp	.+50     	; 0x39a <.L12>

00000368 <.L26>:
	}
	else
		__ticks = (uint16_t)__tmp;
 368:	6d 81       	ldd	r22, Y+5	; 0x05
 36a:	7e 81       	ldd	r23, Y+6	; 0x06
 36c:	8f 81       	ldd	r24, Y+7	; 0x07
 36e:	98 85       	ldd	r25, Y+8	; 0x08
 370:	0e 94 85 02 	call	0x50a	; 0x50a <__fixunssfsi>
 374:	69 ab       	std	Y+49, r22	; 0x31
 376:	7a ab       	std	Y+50, r23	; 0x32
 378:	8b ab       	std	Y+51, r24	; 0x33
 37a:	9c ab       	std	Y+52, r25	; 0x34
 37c:	e9 a9       	ldd	r30, Y+49	; 0x31
 37e:	fa a9       	ldd	r31, Y+50	; 0x32
 380:	fa 87       	std	Y+10, r31	; 0x0a
 382:	e9 87       	std	Y+9, r30	; 0x09

00000384 <.L7>:
 384:	89 85       	ldd	r24, Y+9	; 0x09
 386:	9a 85       	ldd	r25, Y+10	; 0x0a
 388:	9e 87       	std	Y+14, r25	; 0x0e
 38a:	8d 87       	std	Y+13, r24	; 0x0d

0000038c <.LBB22>:
 38c:	8d 85       	ldd	r24, Y+13	; 0x0d
 38e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000390 <.L1^B2>:
 390:	01 97       	sbiw	r24, 0x01	; 1
 392:	f1 f7       	brne	.-4      	; 0x390 <.L1^B2>
 394:	9e 87       	std	Y+14, r25	; 0x0e
 396:	8d 87       	std	Y+13, r24	; 0x0d

00000398 <.Loc.28>:
	...

0000039a <.L12>:
            _delay_ms(20);
            knopIngedrukt = 1;
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <knopIngedrukt+0x1>
 3a2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <knopIngedrukt>

000003a6 <.Loc.30>:
        if(knopIngedrukt) {
            knopIngedrukt = 0;
            _delay_ms(20);
        }
    }
}
 3a6:	a1 c0       	rjmp	.+322    	; 0x4ea <.L29>

000003a8 <.L3>:
        if(knopIngedrukt) {
 3a8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <knopIngedrukt>
 3ac:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <knopIngedrukt+0x1>

000003b0 <.Loc.32>:
 3b0:	00 97       	sbiw	r24, 0x00	; 0
 3b2:	09 f4       	brne	.+2      	; 0x3b6 <.Loc.33>

000003b4 <L0^A>:
 3b4:	9a c0       	rjmp	.+308    	; 0x4ea <.L29>

000003b6 <.Loc.33>:
            knopIngedrukt = 0;
 3b6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <knopIngedrukt+0x1>
 3ba:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <knopIngedrukt>
 3be:	80 e0       	ldi	r24, 0x00	; 0
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	a0 ea       	ldi	r26, 0xA0	; 160
 3c4:	b1 e4       	ldi	r27, 0x41	; 65
 3c6:	8f 87       	std	Y+15, r24	; 0x0f
 3c8:	98 8b       	std	Y+16, r25	; 0x10
 3ca:	a9 8b       	std	Y+17, r26	; 0x11
 3cc:	ba 8b       	std	Y+18, r27	; 0x12

000003ce <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 3ce:	20 e0       	ldi	r18, 0x00	; 0
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	4a e7       	ldi	r20, 0x7A	; 122
 3d4:	55 e4       	ldi	r21, 0x45	; 69
 3d6:	6f 85       	ldd	r22, Y+15	; 0x0f
 3d8:	78 89       	ldd	r23, Y+16	; 0x10
 3da:	89 89       	ldd	r24, Y+17	; 0x11
 3dc:	9a 89       	ldd	r25, Y+18	; 0x12
 3de:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 3e2:	6d ab       	std	Y+53, r22	; 0x35
 3e4:	7e ab       	std	Y+54, r23	; 0x36
 3e6:	8f ab       	std	Y+55, r24	; 0x37
 3e8:	98 af       	std	Y+56, r25	; 0x38
 3ea:	8d a9       	ldd	r24, Y+53	; 0x35
 3ec:	9e a9       	ldd	r25, Y+54	; 0x36
 3ee:	af a9       	ldd	r26, Y+55	; 0x37
 3f0:	b8 ad       	ldd	r27, Y+56	; 0x38
 3f2:	8b 8b       	std	Y+19, r24	; 0x13
 3f4:	9c 8b       	std	Y+20, r25	; 0x14
 3f6:	ad 8b       	std	Y+21, r26	; 0x15
 3f8:	be 8b       	std	Y+22, r27	; 0x16

000003fa <.Loc.35>:
	if (__tmp < 1.0)
 3fa:	20 e0       	ldi	r18, 0x00	; 0
 3fc:	30 e0       	ldi	r19, 0x00	; 0
 3fe:	40 e8       	ldi	r20, 0x80	; 128
 400:	5f e3       	ldi	r21, 0x3F	; 63
 402:	6b 89       	ldd	r22, Y+19	; 0x13
 404:	7c 89       	ldd	r23, Y+20	; 0x14
 406:	8d 89       	ldd	r24, Y+21	; 0x15
 408:	9e 89       	ldd	r25, Y+22	; 0x16
 40a:	0e 94 80 02 	call	0x500	; 0x500 <__cmpsf2>
 40e:	88 23       	and	r24, r24
 410:	2c f4       	brge	.+10     	; 0x41c <.L27>

00000412 <.Loc.36>:
		__ticks = 1;
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	98 8f       	std	Y+24, r25	; 0x18
 418:	8f 8b       	std	Y+23, r24	; 0x17
 41a:	5c c0       	rjmp	.+184    	; 0x4d4 <.L15>

0000041c <.L27>:
	else if (__tmp > 65535)
 41c:	20 e0       	ldi	r18, 0x00	; 0
 41e:	3f ef       	ldi	r19, 0xFF	; 255
 420:	4f e7       	ldi	r20, 0x7F	; 127
 422:	57 e4       	ldi	r21, 0x47	; 71
 424:	6b 89       	ldd	r22, Y+19	; 0x13
 426:	7c 89       	ldd	r23, Y+20	; 0x14
 428:	8d 89       	ldd	r24, Y+21	; 0x15
 42a:	9e 89       	ldd	r25, Y+22	; 0x16
 42c:	0e 94 01 03 	call	0x602	; 0x602 <__gesf2>
 430:	88 23       	and	r24, r24
 432:	09 f0       	breq	.+2      	; 0x436 <L0^A>

00000434 <L0^A>:
 434:	0c f4       	brge	.+2      	; 0x438 <.Loc.38>

00000436 <L0^A>:
 436:	3c c0       	rjmp	.+120    	; 0x4b0 <.L28>

00000438 <.Loc.38>:
		__ticks = (uint16_t) (__ms * 10.0);
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	40 e2       	ldi	r20, 0x20	; 32
 43e:	51 e4       	ldi	r21, 0x41	; 65
 440:	6f 85       	ldd	r22, Y+15	; 0x0f
 442:	78 89       	ldd	r23, Y+16	; 0x10
 444:	89 89       	ldd	r24, Y+17	; 0x11
 446:	9a 89       	ldd	r25, Y+18	; 0x12
 448:	0e 94 06 03 	call	0x60c	; 0x60c <__mulsf3>
 44c:	69 af       	std	Y+57, r22	; 0x39
 44e:	7a af       	std	Y+58, r23	; 0x3a
 450:	8b af       	std	Y+59, r24	; 0x3b
 452:	9c af       	std	Y+60, r25	; 0x3c
 454:	89 ad       	ldd	r24, Y+57	; 0x39
 456:	9a ad       	ldd	r25, Y+58	; 0x3a
 458:	ab ad       	ldd	r26, Y+59	; 0x3b
 45a:	bc ad       	ldd	r27, Y+60	; 0x3c
 45c:	89 a3       	std	Y+33, r24	; 0x21
 45e:	9a a3       	std	Y+34, r25	; 0x22
 460:	ab a3       	std	Y+35, r26	; 0x23
 462:	bc a3       	std	Y+36, r27	; 0x24

00000464 <.Loc.39>:
 464:	69 a1       	ldd	r22, Y+33	; 0x21
 466:	7a a1       	ldd	r23, Y+34	; 0x22
 468:	8b a1       	ldd	r24, Y+35	; 0x23
 46a:	9c a1       	ldd	r25, Y+36	; 0x24
 46c:	0e 94 85 02 	call	0x50a	; 0x50a <__fixunssfsi>
 470:	21 96       	adiw	r28, 0x01	; 1
 472:	6c af       	std	Y+60, r22	; 0x3c
 474:	7d af       	std	Y+61, r23	; 0x3d
 476:	8e af       	std	Y+62, r24	; 0x3e
 478:	9f af       	std	Y+63, r25	; 0x3f
 47a:	21 97       	sbiw	r28, 0x01	; 1
 47c:	ad ad       	ldd	r26, Y+61	; 0x3d
 47e:	be ad       	ldd	r27, Y+62	; 0x3e
 480:	b8 8f       	std	Y+24, r27	; 0x18
 482:	af 8b       	std	Y+23, r26	; 0x17

00000484 <.Loc.40>:
		while(__ticks)
 484:	10 c0       	rjmp	.+32     	; 0x4a6 <.L18>

00000486 <.L19>:
 486:	80 e9       	ldi	r24, 0x90	; 144
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	9a 8f       	std	Y+26, r25	; 0x1a
 48c:	89 8f       	std	Y+25, r24	; 0x19

0000048e <.LBB26>:
 48e:	89 8d       	ldd	r24, Y+25	; 0x19
 490:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000492 <.L1^B3>:
 492:	01 97       	sbiw	r24, 0x01	; 1
 494:	f1 f7       	brne	.-4      	; 0x492 <.L1^B3>
 496:	9a 8f       	std	Y+26, r25	; 0x1a
 498:	89 8f       	std	Y+25, r24	; 0x19

0000049a <.Loc.42>:
	...

0000049c <.LBE26>:
			__ticks --;
 49c:	8f 89       	ldd	r24, Y+23	; 0x17
 49e:	98 8d       	ldd	r25, Y+24	; 0x18
 4a0:	01 97       	sbiw	r24, 0x01	; 1
 4a2:	98 8f       	std	Y+24, r25	; 0x18
 4a4:	8f 8b       	std	Y+23, r24	; 0x17

000004a6 <.L18>:
		while(__ticks)
 4a6:	8f 89       	ldd	r24, Y+23	; 0x17
 4a8:	98 8d       	ldd	r25, Y+24	; 0x18
 4aa:	00 97       	sbiw	r24, 0x00	; 0
 4ac:	61 f7       	brne	.-40     	; 0x486 <.L19>

000004ae <.Loc.45>:
		return;
 4ae:	1d c0       	rjmp	.+58     	; 0x4ea <.L29>

000004b0 <.L28>:
		__ticks = (uint16_t)__tmp;
 4b0:	6b 89       	ldd	r22, Y+19	; 0x13
 4b2:	7c 89       	ldd	r23, Y+20	; 0x14
 4b4:	8d 89       	ldd	r24, Y+21	; 0x15
 4b6:	9e 89       	ldd	r25, Y+22	; 0x16
 4b8:	0e 94 85 02 	call	0x50a	; 0x50a <__fixunssfsi>
 4bc:	25 96       	adiw	r28, 0x05	; 5
 4be:	6c af       	std	Y+60, r22	; 0x3c
 4c0:	7d af       	std	Y+61, r23	; 0x3d
 4c2:	8e af       	std	Y+62, r24	; 0x3e
 4c4:	9f af       	std	Y+63, r25	; 0x3f
 4c6:	25 97       	sbiw	r28, 0x05	; 5
 4c8:	23 96       	adiw	r28, 0x03	; 3
 4ca:	ee ad       	ldd	r30, Y+62	; 0x3e
 4cc:	ff ad       	ldd	r31, Y+63	; 0x3f
 4ce:	23 97       	sbiw	r28, 0x03	; 3
 4d0:	f8 8f       	std	Y+24, r31	; 0x18
 4d2:	ef 8b       	std	Y+23, r30	; 0x17

000004d4 <.L15>:
 4d4:	8f 89       	ldd	r24, Y+23	; 0x17
 4d6:	98 8d       	ldd	r25, Y+24	; 0x18
 4d8:	9c 8f       	std	Y+28, r25	; 0x1c
 4da:	8b 8f       	std	Y+27, r24	; 0x1b

000004dc <.LBB28>:
 4dc:	8b 8d       	ldd	r24, Y+27	; 0x1b
 4de:	9c 8d       	ldd	r25, Y+28	; 0x1c

000004e0 <.L1^B4>:
 4e0:	01 97       	sbiw	r24, 0x01	; 1
 4e2:	f1 f7       	brne	.-4      	; 0x4e0 <.L1^B4>
 4e4:	9c 8f       	std	Y+28, r25	; 0x1c
 4e6:	8b 8f       	std	Y+27, r24	; 0x1b

000004e8 <.Loc.48>:
	...

000004ea <.L29>:
}
 4ea:	00 00       	nop
 4ec:	cc 5b       	subi	r28, 0xBC	; 188
 4ee:	df 4f       	sbci	r29, 0xFF	; 255
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	f8 94       	cli
 4f4:	de bf       	out	0x3e, r29	; 62
 4f6:	0f be       	out	0x3f, r0	; 63
 4f8:	cd bf       	out	0x3d, r28	; 61
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	08 95       	ret

00000500 <__cmpsf2>:
 500:	0e 94 b4 02 	call	0x568	; 0x568 <__fp_cmp>
 504:	08 f4       	brcc	.+2      	; 0x508 <.L1^B1>
 506:	81 e0       	ldi	r24, 0x01	; 1

00000508 <.L1^B1>:
 508:	08 95       	ret

0000050a <__fixunssfsi>:
 50a:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_splitA>
 50e:	88 f0       	brcs	.+34     	; 0x532 <.L_err>
 510:	9f 57       	subi	r25, 0x7F	; 127
 512:	98 f0       	brcs	.+38     	; 0x53a <.L_zr>
 514:	b9 2f       	mov	r27, r25
 516:	99 27       	eor	r25, r25
 518:	b7 51       	subi	r27, 0x17	; 23
 51a:	b0 f0       	brcs	.+44     	; 0x548 <.L4^B1>
 51c:	e1 f0       	breq	.+56     	; 0x556 <.L_sign>

0000051e <.L1^B1>:
 51e:	66 0f       	add	r22, r22
 520:	77 1f       	adc	r23, r23
 522:	88 1f       	adc	r24, r24
 524:	99 1f       	adc	r25, r25
 526:	1a f0       	brmi	.+6      	; 0x52e <.L2^B1>
 528:	ba 95       	dec	r27
 52a:	c9 f7       	brne	.-14     	; 0x51e <.L1^B1>
 52c:	14 c0       	rjmp	.+40     	; 0x556 <.L_sign>

0000052e <.L2^B1>:
 52e:	b1 30       	cpi	r27, 0x01	; 1
 530:	91 f0       	breq	.+36     	; 0x556 <.L_sign>

00000532 <.L_err>:
 532:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_zero>
 536:	b1 e0       	ldi	r27, 0x01	; 1
 538:	08 95       	ret

0000053a <.L_zr>:
 53a:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_zero>

0000053e <.L3^B1>:
 53e:	67 2f       	mov	r22, r23
 540:	78 2f       	mov	r23, r24
 542:	88 27       	eor	r24, r24
 544:	b8 5f       	subi	r27, 0xF8	; 248
 546:	39 f0       	breq	.+14     	; 0x556 <.L_sign>

00000548 <.L4^B1>:
 548:	b9 3f       	cpi	r27, 0xF9	; 249
 54a:	cc f3       	brlt	.-14     	; 0x53e <.L3^B1>

0000054c <.L5^B1>:
 54c:	86 95       	lsr	r24
 54e:	77 95       	ror	r23
 550:	67 95       	ror	r22
 552:	b3 95       	inc	r27
 554:	d9 f7       	brne	.-10     	; 0x54c <.L5^B1>

00000556 <.L_sign>:
 556:	3e f4       	brtc	.+14     	; 0x566 <.L6^B1>
 558:	90 95       	com	r25
 55a:	80 95       	com	r24
 55c:	70 95       	com	r23
 55e:	61 95       	neg	r22
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255

00000566 <.L6^B1>:
 566:	08 95       	ret

00000568 <__fp_cmp>:
 568:	99 0f       	add	r25, r25
 56a:	00 08       	sbc	r0, r0
 56c:	55 0f       	add	r21, r21
 56e:	aa 0b       	sbc	r26, r26
 570:	e0 e8       	ldi	r30, 0x80	; 128
 572:	fe ef       	ldi	r31, 0xFE	; 254
 574:	16 16       	cp	r1, r22
 576:	17 06       	cpc	r1, r23
 578:	e8 07       	cpc	r30, r24
 57a:	f9 07       	cpc	r31, r25
 57c:	c0 f0       	brcs	.+48     	; 0x5ae <.L9^B1>
 57e:	12 16       	cp	r1, r18
 580:	13 06       	cpc	r1, r19
 582:	e4 07       	cpc	r30, r20
 584:	f5 07       	cpc	r31, r21
 586:	98 f0       	brcs	.+38     	; 0x5ae <.L9^B1>
 588:	62 1b       	sub	r22, r18
 58a:	73 0b       	sbc	r23, r19
 58c:	84 0b       	sbc	r24, r20
 58e:	95 0b       	sbc	r25, r21
 590:	39 f4       	brne	.+14     	; 0x5a0 <.L1^B1>
 592:	0a 26       	eor	r0, r26
 594:	61 f0       	breq	.+24     	; 0x5ae <.L9^B1>
 596:	23 2b       	or	r18, r19
 598:	24 2b       	or	r18, r20
 59a:	25 2b       	or	r18, r21
 59c:	21 f4       	brne	.+8      	; 0x5a6 <.L2^B1>
 59e:	08 95       	ret

000005a0 <.L1^B1>:
 5a0:	0a 26       	eor	r0, r26
 5a2:	09 f4       	brne	.+2      	; 0x5a6 <.L2^B1>
 5a4:	a1 40       	sbci	r26, 0x01	; 1

000005a6 <.L2^B1>:
 5a6:	a6 95       	lsr	r26
 5a8:	8f ef       	ldi	r24, 0xFF	; 255
 5aa:	81 1d       	adc	r24, r1
 5ac:	81 1d       	adc	r24, r1

000005ae <.L9^B1>:
 5ae:	08 95       	ret

000005b0 <__fp_split3>:
 5b0:	57 fd       	sbrc	r21, 7
 5b2:	90 58       	subi	r25, 0x80	; 128
 5b4:	44 0f       	add	r20, r20
 5b6:	55 1f       	adc	r21, r21
 5b8:	59 f0       	breq	.+22     	; 0x5d0 <.L4^B1>
 5ba:	5f 3f       	cpi	r21, 0xFF	; 255
 5bc:	71 f0       	breq	.+28     	; 0x5da <.L5^B1>

000005be <.L1^B1>:
 5be:	47 95       	ror	r20

000005c0 <__fp_splitA>:
 5c0:	88 0f       	add	r24, r24
 5c2:	97 fb       	bst	r25, 7
 5c4:	99 1f       	adc	r25, r25
 5c6:	61 f0       	breq	.+24     	; 0x5e0 <.L6^B1>
 5c8:	9f 3f       	cpi	r25, 0xFF	; 255
 5ca:	79 f0       	breq	.+30     	; 0x5ea <.L7^B1>

000005cc <.L3^B1>:
 5cc:	87 95       	ror	r24
 5ce:	08 95       	ret

000005d0 <.L4^B1>:
 5d0:	12 16       	cp	r1, r18
 5d2:	13 06       	cpc	r1, r19
 5d4:	14 06       	cpc	r1, r20
 5d6:	55 1f       	adc	r21, r21
 5d8:	f2 cf       	rjmp	.-28     	; 0x5be <.L1^B1>

000005da <.L5^B1>:
 5da:	46 95       	lsr	r20
 5dc:	f1 df       	rcall	.-30     	; 0x5c0 <__fp_splitA>
 5de:	08 c0       	rjmp	.+16     	; 0x5f0 <.L8^B1>

000005e0 <.L6^B1>:
 5e0:	16 16       	cp	r1, r22
 5e2:	17 06       	cpc	r1, r23
 5e4:	18 06       	cpc	r1, r24
 5e6:	99 1f       	adc	r25, r25
 5e8:	f1 cf       	rjmp	.-30     	; 0x5cc <.L3^B1>

000005ea <.L7^B1>:
 5ea:	86 95       	lsr	r24
 5ec:	71 05       	cpc	r23, r1
 5ee:	61 05       	cpc	r22, r1

000005f0 <.L8^B1>:
 5f0:	08 94       	sec
 5f2:	08 95       	ret

000005f4 <__fp_zero>:
 5f4:	e8 94       	clt

000005f6 <__fp_szero>:
 5f6:	bb 27       	eor	r27, r27
 5f8:	66 27       	eor	r22, r22
 5fa:	77 27       	eor	r23, r23
 5fc:	cb 01       	movw	r24, r22
 5fe:	97 f9       	bld	r25, 7
 600:	08 95       	ret

00000602 <__gesf2>:
 602:	0e 94 b4 02 	call	0x568	; 0x568 <__fp_cmp>
 606:	08 f4       	brcc	.+2      	; 0x60a <.L1^B1>
 608:	8f ef       	ldi	r24, 0xFF	; 255

0000060a <.L1^B1>:
 60a:	08 95       	ret

0000060c <__mulsf3>:
 60c:	0e 94 19 03 	call	0x632	; 0x632 <__mulsf3x>
 610:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_round>

00000614 <.L^B1>:
 614:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__fp_pscA>
 618:	38 f0       	brcs	.+14     	; 0x628 <.L1^B1>
 61a:	0e 94 83 03 	call	0x706	; 0x706 <__fp_pscB>
 61e:	20 f0       	brcs	.+8      	; 0x628 <.L1^B1>
 620:	95 23       	and	r25, r21
 622:	11 f0       	breq	.+4      	; 0x628 <.L1^B1>
 624:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_inf>

00000628 <.L1^B1>:
 628:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__fp_nan>

0000062c <.L2^B1>:
 62c:	11 24       	eor	r1, r1
 62e:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_szero>

00000632 <__mulsf3x>:
 632:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_split3>
 636:	70 f3       	brcs	.-36     	; 0x614 <.L^B1>

00000638 <__mulsf3_pse>:
 638:	95 9f       	mul	r25, r21
 63a:	c1 f3       	breq	.-16     	; 0x62c <.L2^B1>
 63c:	95 0f       	add	r25, r21
 63e:	50 e0       	ldi	r21, 0x00	; 0
 640:	55 1f       	adc	r21, r21
 642:	62 9f       	mul	r22, r18
 644:	f0 01       	movw	r30, r0
 646:	72 9f       	mul	r23, r18
 648:	bb 27       	eor	r27, r27
 64a:	f0 0d       	add	r31, r0
 64c:	b1 1d       	adc	r27, r1
 64e:	63 9f       	mul	r22, r19
 650:	aa 27       	eor	r26, r26
 652:	f0 0d       	add	r31, r0
 654:	b1 1d       	adc	r27, r1
 656:	aa 1f       	adc	r26, r26
 658:	64 9f       	mul	r22, r20
 65a:	66 27       	eor	r22, r22
 65c:	b0 0d       	add	r27, r0
 65e:	a1 1d       	adc	r26, r1
 660:	66 1f       	adc	r22, r22
 662:	82 9f       	mul	r24, r18
 664:	22 27       	eor	r18, r18
 666:	b0 0d       	add	r27, r0
 668:	a1 1d       	adc	r26, r1
 66a:	62 1f       	adc	r22, r18
 66c:	73 9f       	mul	r23, r19
 66e:	b0 0d       	add	r27, r0
 670:	a1 1d       	adc	r26, r1
 672:	62 1f       	adc	r22, r18
 674:	83 9f       	mul	r24, r19
 676:	a0 0d       	add	r26, r0
 678:	61 1d       	adc	r22, r1
 67a:	22 1f       	adc	r18, r18
 67c:	74 9f       	mul	r23, r20
 67e:	33 27       	eor	r19, r19
 680:	a0 0d       	add	r26, r0
 682:	61 1d       	adc	r22, r1
 684:	23 1f       	adc	r18, r19
 686:	84 9f       	mul	r24, r20
 688:	60 0d       	add	r22, r0
 68a:	21 1d       	adc	r18, r1
 68c:	82 2f       	mov	r24, r18
 68e:	76 2f       	mov	r23, r22
 690:	6a 2f       	mov	r22, r26
 692:	11 24       	eor	r1, r1
 694:	9f 57       	subi	r25, 0x7F	; 127
 696:	50 40       	sbci	r21, 0x00	; 0
 698:	9a f0       	brmi	.+38     	; 0x6c0 <.L13^B1>
 69a:	f1 f0       	breq	.+60     	; 0x6d8 <.L15^B1>

0000069c <.L10^B1>:
 69c:	88 23       	and	r24, r24
 69e:	4a f0       	brmi	.+18     	; 0x6b2 <.L11^B1>
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	bb 1f       	adc	r27, r27
 6a6:	66 1f       	adc	r22, r22
 6a8:	77 1f       	adc	r23, r23
 6aa:	88 1f       	adc	r24, r24
 6ac:	91 50       	subi	r25, 0x01	; 1
 6ae:	50 40       	sbci	r21, 0x00	; 0
 6b0:	a9 f7       	brne	.-22     	; 0x69c <.L10^B1>

000006b2 <.L11^B1>:
 6b2:	9e 3f       	cpi	r25, 0xFE	; 254
 6b4:	51 05       	cpc	r21, r1
 6b6:	80 f0       	brcs	.+32     	; 0x6d8 <.L15^B1>
 6b8:	0c 94 73 03 	jmp	0x6e6	; 0x6e6 <__fp_inf>

000006bc <.L12^B1>:
 6bc:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_szero>

000006c0 <.L13^B1>:
 6c0:	5f 3f       	cpi	r21, 0xFF	; 255
 6c2:	e4 f3       	brlt	.-8      	; 0x6bc <.L12^B1>
 6c4:	98 3e       	cpi	r25, 0xE8	; 232
 6c6:	d4 f3       	brlt	.-12     	; 0x6bc <.L12^B1>

000006c8 <.L14^B1>:
 6c8:	86 95       	lsr	r24
 6ca:	77 95       	ror	r23
 6cc:	67 95       	ror	r22
 6ce:	b7 95       	ror	r27
 6d0:	f7 95       	ror	r31
 6d2:	e7 95       	ror	r30
 6d4:	9f 5f       	subi	r25, 0xFF	; 255
 6d6:	c1 f7       	brne	.-16     	; 0x6c8 <.L14^B1>

000006d8 <.L15^B1>:
 6d8:	fe 2b       	or	r31, r30
 6da:	88 0f       	add	r24, r24
 6dc:	91 1d       	adc	r25, r1
 6de:	96 95       	lsr	r25
 6e0:	87 95       	ror	r24
 6e2:	97 f9       	bld	r25, 7
 6e4:	08 95       	ret

000006e6 <__fp_inf>:
 6e6:	97 f9       	bld	r25, 7
 6e8:	9f 67       	ori	r25, 0x7F	; 127
 6ea:	80 e8       	ldi	r24, 0x80	; 128
 6ec:	70 e0       	ldi	r23, 0x00	; 0
 6ee:	60 e0       	ldi	r22, 0x00	; 0
 6f0:	08 95       	ret

000006f2 <__fp_nan>:
 6f2:	9f ef       	ldi	r25, 0xFF	; 255
 6f4:	80 ec       	ldi	r24, 0xC0	; 192
 6f6:	08 95       	ret

000006f8 <__fp_pscA>:
 6f8:	00 24       	eor	r0, r0
 6fa:	0a 94       	dec	r0
 6fc:	16 16       	cp	r1, r22
 6fe:	17 06       	cpc	r1, r23
 700:	18 06       	cpc	r1, r24
 702:	09 06       	cpc	r0, r25
 704:	08 95       	ret

00000706 <__fp_pscB>:
 706:	00 24       	eor	r0, r0
 708:	0a 94       	dec	r0
 70a:	12 16       	cp	r1, r18
 70c:	13 06       	cpc	r1, r19
 70e:	14 06       	cpc	r1, r20
 710:	05 06       	cpc	r0, r21
 712:	08 95       	ret

00000714 <__fp_round>:
 714:	09 2e       	mov	r0, r25
 716:	03 94       	inc	r0
 718:	00 0c       	add	r0, r0
 71a:	11 f4       	brne	.+4      	; 0x720 <.L1^B1>
 71c:	88 23       	and	r24, r24
 71e:	52 f0       	brmi	.+20     	; 0x734 <.L3^B1>

00000720 <.L1^B1>:
 720:	bb 0f       	add	r27, r27
 722:	40 f4       	brcc	.+16     	; 0x734 <.L3^B1>
 724:	bf 2b       	or	r27, r31
 726:	11 f4       	brne	.+4      	; 0x72c <.L2^B1>
 728:	60 ff       	sbrs	r22, 0
 72a:	04 c0       	rjmp	.+8      	; 0x734 <.L3^B1>

0000072c <.L2^B1>:
 72c:	6f 5f       	subi	r22, 0xFF	; 255
 72e:	7f 4f       	sbci	r23, 0xFF	; 255
 730:	8f 4f       	sbci	r24, 0xFF	; 255
 732:	9f 4f       	sbci	r25, 0xFF	; 255

00000734 <.L3^B1>:
 734:	08 95       	ret

00000736 <_exit>:
 736:	f8 94       	cli

00000738 <__stop_program>:
 738:	ff cf       	rjmp	.-2      	; 0x738 <__stop_program>
