
bin\Debug\Vraag_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000063e  000006d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000063e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  000006d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  000006d5  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006e8  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000058  00000000  00000000  00000728  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000e2e  00000000  00000000  00000780  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000c8b  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   000002dc  00000000  00000000  00002239  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000034  00000000  00000000  00002518  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000544  00000000  00000000  0000254c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 0000017d  00000000  00000000  00002a90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 80 00 	call	0x100	; 0x100 <main>
  f8:	0c 94 1d 03 	jmp	0x63a	; 0x63a <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62
 108:	c6 54       	subi	r28, 0x46	; 70
 10a:	d1 09       	sbc	r29, r1
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	f8 94       	cli
 110:	de bf       	out	0x3e, r29	; 62
 112:	0f be       	out	0x3f, r0	; 63
 114:	cd bf       	out	0x3d, r28	; 61

00000116 <.Loc.1>:
    // Zet leds 1, 2, 3, 4 als output (PB4, PB5, PB6, PB7)
    DDRB |= (1 << PB4) | (1 << PB5) | (1 << PB6) | (1 << PB7);
 116:	84 e2       	ldi	r24, 0x24	; 36
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	dc 01       	movw	r26, r24
 11c:	2c 91       	ld	r18, X
 11e:	84 e2       	ldi	r24, 0x24	; 36
 120:	90 e0       	ldi	r25, 0x00	; 0

00000122 <.Loc.2>:
 122:	20 6f       	ori	r18, 0xF0	; 240
 124:	fc 01       	movw	r30, r24
 126:	20 83       	st	Z, r18

00000128 <.Loc.3>:

    // Zet leds 3, 4 uit (PB4, PB5) initieel
    PORTB |= (1 << PB4) | (1 << PB5);
 128:	85 e2       	ldi	r24, 0x25	; 37
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	dc 01       	movw	r26, r24
 12e:	2c 91       	ld	r18, X
 130:	85 e2       	ldi	r24, 0x25	; 37
 132:	90 e0       	ldi	r25, 0x00	; 0

00000134 <.Loc.4>:
 134:	20 63       	ori	r18, 0x30	; 48
 136:	fc 01       	movw	r30, r24
 138:	20 83       	st	Z, r18

0000013a <.Loc.5>:

    // Zet knop 3 als input (PF3)
    DDRF &= ~(1 << PF3);  // PF3 als input instellen
 13a:	80 e3       	ldi	r24, 0x30	; 48
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	dc 01       	movw	r26, r24
 140:	2c 91       	ld	r18, X

00000142 <.Loc.6>:
 142:	80 e3       	ldi	r24, 0x30	; 48
 144:	90 e0       	ldi	r25, 0x00	; 0

00000146 <.Loc.7>:
 146:	27 7f       	andi	r18, 0xF7	; 247
 148:	fc 01       	movw	r30, r24
 14a:	20 83       	st	Z, r18

0000014c <.Loc.8>:
    PORTF |= (1 << PF3);  // Interne pull-up weerstand activeren op PF3
 14c:	81 e3       	ldi	r24, 0x31	; 49
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	dc 01       	movw	r26, r24
 152:	2c 91       	ld	r18, X
 154:	81 e3       	ldi	r24, 0x31	; 49
 156:	90 e0       	ldi	r25, 0x00	; 0

00000158 <.Loc.9>:
 158:	28 60       	ori	r18, 0x08	; 8
 15a:	fc 01       	movw	r30, r24
 15c:	20 83       	st	Z, r18

0000015e <.Loc.10>:

    // Zet teller op 0
    int teller = 0;
 15e:	1a 82       	std	Y+2, r1	; 0x02
 160:	19 82       	std	Y+1, r1	; 0x01

00000162 <.L21>:

    while(1)
    {
        // Controleer of de knop is ingedrukt (knop op PF3, active-low)
        if (!(PINF & (1 << PF3)))
 162:	8f e2       	ldi	r24, 0x2F	; 47
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	dc 01       	movw	r26, r24
 168:	8c 91       	ld	r24, X

0000016a <.Loc.12>:
 16a:	88 2f       	mov	r24, r24
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	88 70       	andi	r24, 0x08	; 8
 170:	99 27       	eor	r25, r25

00000172 <.Loc.13>:
 172:	00 97       	sbiw	r24, 0x00	; 0
 174:	09 f0       	breq	.+2      	; 0x178 <L0^A+0x2>

00000176 <L0^A>:
 176:	9f c0       	rjmp	.+318    	; 0x2b6 <.L2>
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	a8 e4       	ldi	r26, 0x48	; 72
 17e:	b2 e4       	ldi	r27, 0x42	; 66
 180:	8b 83       	std	Y+3, r24	; 0x03
 182:	9c 83       	std	Y+4, r25	; 0x04
 184:	ad 83       	std	Y+5, r26	; 0x05
 186:	be 83       	std	Y+6, r27	; 0x06

00000188 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 188:	20 e0       	ldi	r18, 0x00	; 0
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	4a e7       	ldi	r20, 0x7A	; 122
 18e:	55 e4       	ldi	r21, 0x45	; 69
 190:	6b 81       	ldd	r22, Y+3	; 0x03
 192:	7c 81       	ldd	r23, Y+4	; 0x04
 194:	8d 81       	ldd	r24, Y+5	; 0x05
 196:	9e 81       	ldd	r25, Y+6	; 0x06
 198:	0e 94 88 02 	call	0x510	; 0x510 <__mulsf3>
 19c:	6f a3       	std	Y+39, r22	; 0x27
 19e:	78 a7       	std	Y+40, r23	; 0x28
 1a0:	89 a7       	std	Y+41, r24	; 0x29
 1a2:	9a a7       	std	Y+42, r25	; 0x2a
 1a4:	8f a1       	ldd	r24, Y+39	; 0x27
 1a6:	98 a5       	ldd	r25, Y+40	; 0x28
 1a8:	a9 a5       	ldd	r26, Y+41	; 0x29
 1aa:	ba a5       	ldd	r27, Y+42	; 0x2a
 1ac:	8f 83       	std	Y+7, r24	; 0x07
 1ae:	98 87       	std	Y+8, r25	; 0x08
 1b0:	a9 87       	std	Y+9, r26	; 0x09
 1b2:	ba 87       	std	Y+10, r27	; 0x0a

000001b4 <.Loc.15>:
	if (__tmp < 1.0)
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	40 e8       	ldi	r20, 0x80	; 128
 1ba:	5f e3       	ldi	r21, 0x3F	; 63
 1bc:	6f 81       	ldd	r22, Y+7	; 0x07
 1be:	78 85       	ldd	r23, Y+8	; 0x08
 1c0:	89 85       	ldd	r24, Y+9	; 0x09
 1c2:	9a 85       	ldd	r25, Y+10	; 0x0a
 1c4:	0e 94 02 02 	call	0x404	; 0x404 <__cmpsf2>
 1c8:	88 23       	and	r24, r24
 1ca:	2c f4       	brge	.+10     	; 0x1d6 <.L26>

000001cc <.Loc.16>:
		__ticks = 1;
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	9c 87       	std	Y+12, r25	; 0x0c
 1d2:	8b 87       	std	Y+11, r24	; 0x0b
 1d4:	55 c0       	rjmp	.+170    	; 0x280 <.L5>

000001d6 <.L26>:
	else if (__tmp > 65535)
 1d6:	20 e0       	ldi	r18, 0x00	; 0
 1d8:	3f ef       	ldi	r19, 0xFF	; 255
 1da:	4f e7       	ldi	r20, 0x7F	; 127
 1dc:	57 e4       	ldi	r21, 0x47	; 71
 1de:	6f 81       	ldd	r22, Y+7	; 0x07
 1e0:	78 85       	ldd	r23, Y+8	; 0x08
 1e2:	89 85       	ldd	r24, Y+9	; 0x09
 1e4:	9a 85       	ldd	r25, Y+10	; 0x0a
 1e6:	0e 94 83 02 	call	0x506	; 0x506 <__gesf2>
 1ea:	88 23       	and	r24, r24
 1ec:	d9 f1       	breq	.+118    	; 0x264 <.L27>
 1ee:	d4 f1       	brlt	.+116    	; 0x264 <.L27>

000001f0 <.Loc.18>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	40 e2       	ldi	r20, 0x20	; 32
 1f6:	51 e4       	ldi	r21, 0x41	; 65
 1f8:	6b 81       	ldd	r22, Y+3	; 0x03
 1fa:	7c 81       	ldd	r23, Y+4	; 0x04
 1fc:	8d 81       	ldd	r24, Y+5	; 0x05
 1fe:	9e 81       	ldd	r25, Y+6	; 0x06
 200:	0e 94 88 02 	call	0x510	; 0x510 <__mulsf3>
 204:	6b a7       	std	Y+43, r22	; 0x2b
 206:	7c a7       	std	Y+44, r23	; 0x2c
 208:	8d a7       	std	Y+45, r24	; 0x2d
 20a:	9e a7       	std	Y+46, r25	; 0x2e
 20c:	8b a5       	ldd	r24, Y+43	; 0x2b
 20e:	9c a5       	ldd	r25, Y+44	; 0x2c
 210:	ad a5       	ldd	r26, Y+45	; 0x2d
 212:	be a5       	ldd	r27, Y+46	; 0x2e
 214:	8f 8f       	std	Y+31, r24	; 0x1f
 216:	98 a3       	std	Y+32, r25	; 0x20
 218:	a9 a3       	std	Y+33, r26	; 0x21
 21a:	ba a3       	std	Y+34, r27	; 0x22

0000021c <.Loc.19>:
 21c:	6f 8d       	ldd	r22, Y+31	; 0x1f
 21e:	78 a1       	ldd	r23, Y+32	; 0x20
 220:	89 a1       	ldd	r24, Y+33	; 0x21
 222:	9a a1       	ldd	r25, Y+34	; 0x22
 224:	0e 94 07 02 	call	0x40e	; 0x40e <__fixunssfsi>
 228:	6f a7       	std	Y+47, r22	; 0x2f
 22a:	78 ab       	std	Y+48, r23	; 0x30
 22c:	89 ab       	std	Y+49, r24	; 0x31
 22e:	9a ab       	std	Y+50, r25	; 0x32
 230:	af a5       	ldd	r26, Y+47	; 0x2f
 232:	b8 a9       	ldd	r27, Y+48	; 0x30
 234:	bc 87       	std	Y+12, r27	; 0x0c
 236:	ab 87       	std	Y+11, r26	; 0x0b

00000238 <.Loc.20>:
		while(__ticks)
 238:	10 c0       	rjmp	.+32     	; 0x25a <.L8>

0000023a <.L9>:
 23a:	80 e9       	ldi	r24, 0x90	; 144
 23c:	91 e0       	ldi	r25, 0x01	; 1
 23e:	9e 87       	std	Y+14, r25	; 0x0e
 240:	8d 87       	std	Y+13, r24	; 0x0d

00000242 <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 242:	8d 85       	ldd	r24, Y+13	; 0x0d
 244:	9e 85       	ldd	r25, Y+14	; 0x0e

00000246 <.L1^B1>:
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <.L1^B1>
 24a:	9e 87       	std	Y+14, r25	; 0x0e
 24c:	8d 87       	std	Y+13, r24	; 0x0d

0000024e <.Loc.22>:
	...

00000250 <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 250:	8b 85       	ldd	r24, Y+11	; 0x0b
 252:	9c 85       	ldd	r25, Y+12	; 0x0c
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	9c 87       	std	Y+12, r25	; 0x0c
 258:	8b 87       	std	Y+11, r24	; 0x0b

0000025a <.L8>:
		while(__ticks)
 25a:	8b 85       	ldd	r24, Y+11	; 0x0b
 25c:	9c 85       	ldd	r25, Y+12	; 0x0c
 25e:	00 97       	sbiw	r24, 0x00	; 0
 260:	61 f7       	brne	.-40     	; 0x23a <.L9>

00000262 <.Loc.25>:
		}
		return;
 262:	19 c0       	rjmp	.+50     	; 0x296 <.L10>

00000264 <.L27>:
	}
	else
		__ticks = (uint16_t)__tmp;
 264:	6f 81       	ldd	r22, Y+7	; 0x07
 266:	78 85       	ldd	r23, Y+8	; 0x08
 268:	89 85       	ldd	r24, Y+9	; 0x09
 26a:	9a 85       	ldd	r25, Y+10	; 0x0a
 26c:	0e 94 07 02 	call	0x40e	; 0x40e <__fixunssfsi>
 270:	6b ab       	std	Y+51, r22	; 0x33
 272:	7c ab       	std	Y+52, r23	; 0x34
 274:	8d ab       	std	Y+53, r24	; 0x35
 276:	9e ab       	std	Y+54, r25	; 0x36
 278:	eb a9       	ldd	r30, Y+51	; 0x33
 27a:	fc a9       	ldd	r31, Y+52	; 0x34
 27c:	fc 87       	std	Y+12, r31	; 0x0c
 27e:	eb 87       	std	Y+11, r30	; 0x0b

00000280 <.L5>:
 280:	8b 85       	ldd	r24, Y+11	; 0x0b
 282:	9c 85       	ldd	r25, Y+12	; 0x0c
 284:	98 8b       	std	Y+16, r25	; 0x10
 286:	8f 87       	std	Y+15, r24	; 0x0f

00000288 <.LBB22>:
 288:	8f 85       	ldd	r24, Y+15	; 0x0f
 28a:	98 89       	ldd	r25, Y+16	; 0x10

0000028c <.L1^B2>:
 28c:	01 97       	sbiw	r24, 0x01	; 1
 28e:	f1 f7       	brne	.-4      	; 0x28c <.L1^B2>
 290:	98 8b       	std	Y+16, r25	; 0x10
 292:	8f 87       	std	Y+15, r24	; 0x0f

00000294 <.Loc.28>:
	...

00000296 <.L10>:
	...

00000298 <.L11>:
        {
            // Wacht tot de knop wordt losgelaten
            _delay_ms(50);  // Debounce vertraging
            while (!(PINF & (1 << PF3)));  // Wacht tot knop is losgelaten
 298:	8f e2       	ldi	r24, 0x2F	; 47
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	dc 01       	movw	r26, r24
 29e:	8c 91       	ld	r24, X

000002a0 <.Loc.31>:
 2a0:	88 2f       	mov	r24, r24
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	88 70       	andi	r24, 0x08	; 8
 2a6:	99 27       	eor	r25, r25

000002a8 <.Loc.32>:
 2a8:	00 97       	sbiw	r24, 0x00	; 0
 2aa:	b1 f3       	breq	.-20     	; 0x298 <.L11>

000002ac <.Loc.33>:

            // Verhoog teller na elke druk
            teller++;
 2ac:	89 81       	ldd	r24, Y+1	; 0x01
 2ae:	9a 81       	ldd	r25, Y+2	; 0x02
 2b0:	01 96       	adiw	r24, 0x01	; 1
 2b2:	9a 83       	std	Y+2, r25	; 0x02
 2b4:	89 83       	std	Y+1, r24	; 0x01

000002b6 <.L2>:
        }

        // Zet de led aan na twee keer drukken
        if (teller == 2)
 2b6:	89 81       	ldd	r24, Y+1	; 0x01
 2b8:	9a 81       	ldd	r25, Y+2	; 0x02
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	91 05       	cpc	r25, r1
 2be:	49 f4       	brne	.+18     	; 0x2d2 <.L12>

000002c0 <.Loc.35>:
        {
            PORTB &= ~(1 << PB4);  // Zet LED op PB4 aan
 2c0:	85 e2       	ldi	r24, 0x25	; 37
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 81       	ld	r18, Z

000002c8 <.Loc.36>:
 2c8:	85 e2       	ldi	r24, 0x25	; 37
 2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.37>:
 2cc:	2f 7e       	andi	r18, 0xEF	; 239
 2ce:	dc 01       	movw	r26, r24
 2d0:	2c 93       	st	X, r18

000002d2 <.L12>:
 2d2:	80 e0       	ldi	r24, 0x00	; 0
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	a8 e4       	ldi	r26, 0x48	; 72
 2d8:	b2 e4       	ldi	r27, 0x42	; 66
 2da:	89 8b       	std	Y+17, r24	; 0x11
 2dc:	9a 8b       	std	Y+18, r25	; 0x12
 2de:	ab 8b       	std	Y+19, r26	; 0x13
 2e0:	bc 8b       	std	Y+20, r27	; 0x14

000002e2 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	30 e0       	ldi	r19, 0x00	; 0
 2e6:	4a e7       	ldi	r20, 0x7A	; 122
 2e8:	55 e4       	ldi	r21, 0x45	; 69
 2ea:	69 89       	ldd	r22, Y+17	; 0x11
 2ec:	7a 89       	ldd	r23, Y+18	; 0x12
 2ee:	8b 89       	ldd	r24, Y+19	; 0x13
 2f0:	9c 89       	ldd	r25, Y+20	; 0x14
 2f2:	0e 94 88 02 	call	0x510	; 0x510 <__mulsf3>
 2f6:	6f ab       	std	Y+55, r22	; 0x37
 2f8:	78 af       	std	Y+56, r23	; 0x38
 2fa:	89 af       	std	Y+57, r24	; 0x39
 2fc:	9a af       	std	Y+58, r25	; 0x3a
 2fe:	8f a9       	ldd	r24, Y+55	; 0x37
 300:	98 ad       	ldd	r25, Y+56	; 0x38
 302:	a9 ad       	ldd	r26, Y+57	; 0x39
 304:	ba ad       	ldd	r27, Y+58	; 0x3a
 306:	8d 8b       	std	Y+21, r24	; 0x15
 308:	9e 8b       	std	Y+22, r25	; 0x16
 30a:	af 8b       	std	Y+23, r26	; 0x17
 30c:	b8 8f       	std	Y+24, r27	; 0x18

0000030e <.Loc.39>:
	if (__tmp < 1.0)
 30e:	20 e0       	ldi	r18, 0x00	; 0
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	40 e8       	ldi	r20, 0x80	; 128
 314:	5f e3       	ldi	r21, 0x3F	; 63
 316:	6d 89       	ldd	r22, Y+21	; 0x15
 318:	7e 89       	ldd	r23, Y+22	; 0x16
 31a:	8f 89       	ldd	r24, Y+23	; 0x17
 31c:	98 8d       	ldd	r25, Y+24	; 0x18
 31e:	0e 94 02 02 	call	0x404	; 0x404 <__cmpsf2>
 322:	88 23       	and	r24, r24
 324:	2c f4       	brge	.+10     	; 0x330 <.L28>

00000326 <.Loc.40>:
		__ticks = 1;
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	9a 8f       	std	Y+26, r25	; 0x1a
 32c:	89 8f       	std	Y+25, r24	; 0x19
 32e:	5e c0       	rjmp	.+188    	; 0x3ec <.L15>

00000330 <.L28>:
	else if (__tmp > 65535)
 330:	20 e0       	ldi	r18, 0x00	; 0
 332:	3f ef       	ldi	r19, 0xFF	; 255
 334:	4f e7       	ldi	r20, 0x7F	; 127
 336:	57 e4       	ldi	r21, 0x47	; 71
 338:	6d 89       	ldd	r22, Y+21	; 0x15
 33a:	7e 89       	ldd	r23, Y+22	; 0x16
 33c:	8f 89       	ldd	r24, Y+23	; 0x17
 33e:	98 8d       	ldd	r25, Y+24	; 0x18
 340:	0e 94 83 02 	call	0x506	; 0x506 <__gesf2>
 344:	88 23       	and	r24, r24
 346:	09 f0       	breq	.+2      	; 0x34a <L0^A>

00000348 <L0^A>:
 348:	0c f4       	brge	.+2      	; 0x34c <.Loc.42>

0000034a <L0^A>:
 34a:	3e c0       	rjmp	.+124    	; 0x3c8 <.L29>

0000034c <.Loc.42>:
		__ticks = (uint16_t) (__ms * 10.0);
 34c:	20 e0       	ldi	r18, 0x00	; 0
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	40 e2       	ldi	r20, 0x20	; 32
 352:	51 e4       	ldi	r21, 0x41	; 65
 354:	69 89       	ldd	r22, Y+17	; 0x11
 356:	7a 89       	ldd	r23, Y+18	; 0x12
 358:	8b 89       	ldd	r24, Y+19	; 0x13
 35a:	9c 89       	ldd	r25, Y+20	; 0x14
 35c:	0e 94 88 02 	call	0x510	; 0x510 <__mulsf3>
 360:	6b af       	std	Y+59, r22	; 0x3b
 362:	7c af       	std	Y+60, r23	; 0x3c
 364:	8d af       	std	Y+61, r24	; 0x3d
 366:	9e af       	std	Y+62, r25	; 0x3e
 368:	8b ad       	ldd	r24, Y+59	; 0x3b
 36a:	9c ad       	ldd	r25, Y+60	; 0x3c
 36c:	ad ad       	ldd	r26, Y+61	; 0x3d
 36e:	be ad       	ldd	r27, Y+62	; 0x3e
 370:	8b a3       	std	Y+35, r24	; 0x23
 372:	9c a3       	std	Y+36, r25	; 0x24
 374:	ad a3       	std	Y+37, r26	; 0x25
 376:	be a3       	std	Y+38, r27	; 0x26

00000378 <.Loc.43>:
 378:	6b a1       	ldd	r22, Y+35	; 0x23
 37a:	7c a1       	ldd	r23, Y+36	; 0x24
 37c:	8d a1       	ldd	r24, Y+37	; 0x25
 37e:	9e a1       	ldd	r25, Y+38	; 0x26
 380:	0e 94 07 02 	call	0x40e	; 0x40e <__fixunssfsi>
 384:	23 96       	adiw	r28, 0x03	; 3
 386:	6c af       	std	Y+60, r22	; 0x3c
 388:	7d af       	std	Y+61, r23	; 0x3d
 38a:	8e af       	std	Y+62, r24	; 0x3e
 38c:	9f af       	std	Y+63, r25	; 0x3f
 38e:	23 97       	sbiw	r28, 0x03	; 3
 390:	21 96       	adiw	r28, 0x01	; 1
 392:	ae ad       	ldd	r26, Y+62	; 0x3e
 394:	bf ad       	ldd	r27, Y+63	; 0x3f
 396:	21 97       	sbiw	r28, 0x01	; 1
 398:	ba 8f       	std	Y+26, r27	; 0x1a
 39a:	a9 8f       	std	Y+25, r26	; 0x19

0000039c <.Loc.44>:
		while(__ticks)
 39c:	10 c0       	rjmp	.+32     	; 0x3be <.L18>

0000039e <.L19>:
 39e:	80 e9       	ldi	r24, 0x90	; 144
 3a0:	91 e0       	ldi	r25, 0x01	; 1
 3a2:	9c 8f       	std	Y+28, r25	; 0x1c
 3a4:	8b 8f       	std	Y+27, r24	; 0x1b

000003a6 <.LBB26>:
 3a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
 3a8:	9c 8d       	ldd	r25, Y+28	; 0x1c

000003aa <.L1^B3>:
 3aa:	01 97       	sbiw	r24, 0x01	; 1
 3ac:	f1 f7       	brne	.-4      	; 0x3aa <.L1^B3>
 3ae:	9c 8f       	std	Y+28, r25	; 0x1c
 3b0:	8b 8f       	std	Y+27, r24	; 0x1b

000003b2 <.Loc.46>:
	...

000003b4 <.LBE26>:
			__ticks --;
 3b4:	89 8d       	ldd	r24, Y+25	; 0x19
 3b6:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	9a 8f       	std	Y+26, r25	; 0x1a
 3bc:	89 8f       	std	Y+25, r24	; 0x19

000003be <.L18>:
		while(__ticks)
 3be:	89 8d       	ldd	r24, Y+25	; 0x19
 3c0:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3c2:	00 97       	sbiw	r24, 0x00	; 0
 3c4:	61 f7       	brne	.-40     	; 0x39e <.L19>

000003c6 <.Loc.49>:
		return;
 3c6:	1d c0       	rjmp	.+58     	; 0x402 <.L20>

000003c8 <.L29>:
		__ticks = (uint16_t)__tmp;
 3c8:	6d 89       	ldd	r22, Y+21	; 0x15
 3ca:	7e 89       	ldd	r23, Y+22	; 0x16
 3cc:	8f 89       	ldd	r24, Y+23	; 0x17
 3ce:	98 8d       	ldd	r25, Y+24	; 0x18
 3d0:	0e 94 07 02 	call	0x40e	; 0x40e <__fixunssfsi>
 3d4:	27 96       	adiw	r28, 0x07	; 7
 3d6:	6c af       	std	Y+60, r22	; 0x3c
 3d8:	7d af       	std	Y+61, r23	; 0x3d
 3da:	8e af       	std	Y+62, r24	; 0x3e
 3dc:	9f af       	std	Y+63, r25	; 0x3f
 3de:	27 97       	sbiw	r28, 0x07	; 7
 3e0:	25 96       	adiw	r28, 0x05	; 5
 3e2:	ee ad       	ldd	r30, Y+62	; 0x3e
 3e4:	ff ad       	ldd	r31, Y+63	; 0x3f
 3e6:	25 97       	sbiw	r28, 0x05	; 5
 3e8:	fa 8f       	std	Y+26, r31	; 0x1a
 3ea:	e9 8f       	std	Y+25, r30	; 0x19

000003ec <.L15>:
 3ec:	89 8d       	ldd	r24, Y+25	; 0x19
 3ee:	9a 8d       	ldd	r25, Y+26	; 0x1a
 3f0:	9e 8f       	std	Y+30, r25	; 0x1e
 3f2:	8d 8f       	std	Y+29, r24	; 0x1d

000003f4 <.LBB28>:
 3f4:	8d 8d       	ldd	r24, Y+29	; 0x1d
 3f6:	9e 8d       	ldd	r25, Y+30	; 0x1e

000003f8 <.L1^B4>:
 3f8:	01 97       	sbiw	r24, 0x01	; 1
 3fa:	f1 f7       	brne	.-4      	; 0x3f8 <.L1^B4>
 3fc:	9e 8f       	std	Y+30, r25	; 0x1e
 3fe:	8d 8f       	std	Y+29, r24	; 0x1d

00000400 <.Loc.52>:
	...

00000402 <.L20>:
        if (!(PINF & (1 << PF3)))
 402:	af ce       	rjmp	.-674    	; 0x162 <.L21>

00000404 <__cmpsf2>:
 404:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_cmp>
 408:	08 f4       	brcc	.+2      	; 0x40c <.L1^B1>
 40a:	81 e0       	ldi	r24, 0x01	; 1

0000040c <.L1^B1>:
 40c:	08 95       	ret

0000040e <__fixunssfsi>:
 40e:	0e 94 62 02 	call	0x4c4	; 0x4c4 <__fp_splitA>
 412:	88 f0       	brcs	.+34     	; 0x436 <.L_err>
 414:	9f 57       	subi	r25, 0x7F	; 127
 416:	98 f0       	brcs	.+38     	; 0x43e <.L_zr>
 418:	b9 2f       	mov	r27, r25
 41a:	99 27       	eor	r25, r25
 41c:	b7 51       	subi	r27, 0x17	; 23
 41e:	b0 f0       	brcs	.+44     	; 0x44c <.L4^B1>
 420:	e1 f0       	breq	.+56     	; 0x45a <.L_sign>

00000422 <.L1^B1>:
 422:	66 0f       	add	r22, r22
 424:	77 1f       	adc	r23, r23
 426:	88 1f       	adc	r24, r24
 428:	99 1f       	adc	r25, r25
 42a:	1a f0       	brmi	.+6      	; 0x432 <.L2^B1>
 42c:	ba 95       	dec	r27
 42e:	c9 f7       	brne	.-14     	; 0x422 <.L1^B1>
 430:	14 c0       	rjmp	.+40     	; 0x45a <.L_sign>

00000432 <.L2^B1>:
 432:	b1 30       	cpi	r27, 0x01	; 1
 434:	91 f0       	breq	.+36     	; 0x45a <.L_sign>

00000436 <.L_err>:
 436:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <__fp_zero>
 43a:	b1 e0       	ldi	r27, 0x01	; 1
 43c:	08 95       	ret

0000043e <.L_zr>:
 43e:	0c 94 7c 02 	jmp	0x4f8	; 0x4f8 <__fp_zero>

00000442 <.L3^B1>:
 442:	67 2f       	mov	r22, r23
 444:	78 2f       	mov	r23, r24
 446:	88 27       	eor	r24, r24
 448:	b8 5f       	subi	r27, 0xF8	; 248
 44a:	39 f0       	breq	.+14     	; 0x45a <.L_sign>

0000044c <.L4^B1>:
 44c:	b9 3f       	cpi	r27, 0xF9	; 249
 44e:	cc f3       	brlt	.-14     	; 0x442 <.L3^B1>

00000450 <.L5^B1>:
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b3 95       	inc	r27
 458:	d9 f7       	brne	.-10     	; 0x450 <.L5^B1>

0000045a <.L_sign>:
 45a:	3e f4       	brtc	.+14     	; 0x46a <.L6^B1>
 45c:	90 95       	com	r25
 45e:	80 95       	com	r24
 460:	70 95       	com	r23
 462:	61 95       	neg	r22
 464:	7f 4f       	sbci	r23, 0xFF	; 255
 466:	8f 4f       	sbci	r24, 0xFF	; 255
 468:	9f 4f       	sbci	r25, 0xFF	; 255

0000046a <.L6^B1>:
 46a:	08 95       	ret

0000046c <__fp_cmp>:
 46c:	99 0f       	add	r25, r25
 46e:	00 08       	sbc	r0, r0
 470:	55 0f       	add	r21, r21
 472:	aa 0b       	sbc	r26, r26
 474:	e0 e8       	ldi	r30, 0x80	; 128
 476:	fe ef       	ldi	r31, 0xFE	; 254
 478:	16 16       	cp	r1, r22
 47a:	17 06       	cpc	r1, r23
 47c:	e8 07       	cpc	r30, r24
 47e:	f9 07       	cpc	r31, r25
 480:	c0 f0       	brcs	.+48     	; 0x4b2 <.L9^B1>
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	e4 07       	cpc	r30, r20
 488:	f5 07       	cpc	r31, r21
 48a:	98 f0       	brcs	.+38     	; 0x4b2 <.L9^B1>
 48c:	62 1b       	sub	r22, r18
 48e:	73 0b       	sbc	r23, r19
 490:	84 0b       	sbc	r24, r20
 492:	95 0b       	sbc	r25, r21
 494:	39 f4       	brne	.+14     	; 0x4a4 <.L1^B1>
 496:	0a 26       	eor	r0, r26
 498:	61 f0       	breq	.+24     	; 0x4b2 <.L9^B1>
 49a:	23 2b       	or	r18, r19
 49c:	24 2b       	or	r18, r20
 49e:	25 2b       	or	r18, r21
 4a0:	21 f4       	brne	.+8      	; 0x4aa <.L2^B1>
 4a2:	08 95       	ret

000004a4 <.L1^B1>:
 4a4:	0a 26       	eor	r0, r26
 4a6:	09 f4       	brne	.+2      	; 0x4aa <.L2^B1>
 4a8:	a1 40       	sbci	r26, 0x01	; 1

000004aa <.L2^B1>:
 4aa:	a6 95       	lsr	r26
 4ac:	8f ef       	ldi	r24, 0xFF	; 255
 4ae:	81 1d       	adc	r24, r1
 4b0:	81 1d       	adc	r24, r1

000004b2 <.L9^B1>:
 4b2:	08 95       	ret

000004b4 <__fp_split3>:
 4b4:	57 fd       	sbrc	r21, 7
 4b6:	90 58       	subi	r25, 0x80	; 128
 4b8:	44 0f       	add	r20, r20
 4ba:	55 1f       	adc	r21, r21
 4bc:	59 f0       	breq	.+22     	; 0x4d4 <.L4^B1>
 4be:	5f 3f       	cpi	r21, 0xFF	; 255
 4c0:	71 f0       	breq	.+28     	; 0x4de <.L5^B1>

000004c2 <.L1^B1>:
 4c2:	47 95       	ror	r20

000004c4 <__fp_splitA>:
 4c4:	88 0f       	add	r24, r24
 4c6:	97 fb       	bst	r25, 7
 4c8:	99 1f       	adc	r25, r25
 4ca:	61 f0       	breq	.+24     	; 0x4e4 <.L6^B1>
 4cc:	9f 3f       	cpi	r25, 0xFF	; 255
 4ce:	79 f0       	breq	.+30     	; 0x4ee <.L7^B1>

000004d0 <.L3^B1>:
 4d0:	87 95       	ror	r24
 4d2:	08 95       	ret

000004d4 <.L4^B1>:
 4d4:	12 16       	cp	r1, r18
 4d6:	13 06       	cpc	r1, r19
 4d8:	14 06       	cpc	r1, r20
 4da:	55 1f       	adc	r21, r21
 4dc:	f2 cf       	rjmp	.-28     	; 0x4c2 <.L1^B1>

000004de <.L5^B1>:
 4de:	46 95       	lsr	r20
 4e0:	f1 df       	rcall	.-30     	; 0x4c4 <__fp_splitA>
 4e2:	08 c0       	rjmp	.+16     	; 0x4f4 <.L8^B1>

000004e4 <.L6^B1>:
 4e4:	16 16       	cp	r1, r22
 4e6:	17 06       	cpc	r1, r23
 4e8:	18 06       	cpc	r1, r24
 4ea:	99 1f       	adc	r25, r25
 4ec:	f1 cf       	rjmp	.-30     	; 0x4d0 <.L3^B1>

000004ee <.L7^B1>:
 4ee:	86 95       	lsr	r24
 4f0:	71 05       	cpc	r23, r1
 4f2:	61 05       	cpc	r22, r1

000004f4 <.L8^B1>:
 4f4:	08 94       	sec
 4f6:	08 95       	ret

000004f8 <__fp_zero>:
 4f8:	e8 94       	clt

000004fa <__fp_szero>:
 4fa:	bb 27       	eor	r27, r27
 4fc:	66 27       	eor	r22, r22
 4fe:	77 27       	eor	r23, r23
 500:	cb 01       	movw	r24, r22
 502:	97 f9       	bld	r25, 7
 504:	08 95       	ret

00000506 <__gesf2>:
 506:	0e 94 36 02 	call	0x46c	; 0x46c <__fp_cmp>
 50a:	08 f4       	brcc	.+2      	; 0x50e <.L1^B1>
 50c:	8f ef       	ldi	r24, 0xFF	; 255

0000050e <.L1^B1>:
 50e:	08 95       	ret

00000510 <__mulsf3>:
 510:	0e 94 9b 02 	call	0x536	; 0x536 <__mulsf3x>
 514:	0c 94 0c 03 	jmp	0x618	; 0x618 <__fp_round>

00000518 <.L^B1>:
 518:	0e 94 fe 02 	call	0x5fc	; 0x5fc <__fp_pscA>
 51c:	38 f0       	brcs	.+14     	; 0x52c <.L1^B1>
 51e:	0e 94 05 03 	call	0x60a	; 0x60a <__fp_pscB>
 522:	20 f0       	brcs	.+8      	; 0x52c <.L1^B1>
 524:	95 23       	and	r25, r21
 526:	11 f0       	breq	.+4      	; 0x52c <.L1^B1>
 528:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>

0000052c <.L1^B1>:
 52c:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_nan>

00000530 <.L2^B1>:
 530:	11 24       	eor	r1, r1
 532:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>

00000536 <__mulsf3x>:
 536:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_split3>
 53a:	70 f3       	brcs	.-36     	; 0x518 <.L^B1>

0000053c <__mulsf3_pse>:
 53c:	95 9f       	mul	r25, r21
 53e:	c1 f3       	breq	.-16     	; 0x530 <.L2^B1>
 540:	95 0f       	add	r25, r21
 542:	50 e0       	ldi	r21, 0x00	; 0
 544:	55 1f       	adc	r21, r21
 546:	62 9f       	mul	r22, r18
 548:	f0 01       	movw	r30, r0
 54a:	72 9f       	mul	r23, r18
 54c:	bb 27       	eor	r27, r27
 54e:	f0 0d       	add	r31, r0
 550:	b1 1d       	adc	r27, r1
 552:	63 9f       	mul	r22, r19
 554:	aa 27       	eor	r26, r26
 556:	f0 0d       	add	r31, r0
 558:	b1 1d       	adc	r27, r1
 55a:	aa 1f       	adc	r26, r26
 55c:	64 9f       	mul	r22, r20
 55e:	66 27       	eor	r22, r22
 560:	b0 0d       	add	r27, r0
 562:	a1 1d       	adc	r26, r1
 564:	66 1f       	adc	r22, r22
 566:	82 9f       	mul	r24, r18
 568:	22 27       	eor	r18, r18
 56a:	b0 0d       	add	r27, r0
 56c:	a1 1d       	adc	r26, r1
 56e:	62 1f       	adc	r22, r18
 570:	73 9f       	mul	r23, r19
 572:	b0 0d       	add	r27, r0
 574:	a1 1d       	adc	r26, r1
 576:	62 1f       	adc	r22, r18
 578:	83 9f       	mul	r24, r19
 57a:	a0 0d       	add	r26, r0
 57c:	61 1d       	adc	r22, r1
 57e:	22 1f       	adc	r18, r18
 580:	74 9f       	mul	r23, r20
 582:	33 27       	eor	r19, r19
 584:	a0 0d       	add	r26, r0
 586:	61 1d       	adc	r22, r1
 588:	23 1f       	adc	r18, r19
 58a:	84 9f       	mul	r24, r20
 58c:	60 0d       	add	r22, r0
 58e:	21 1d       	adc	r18, r1
 590:	82 2f       	mov	r24, r18
 592:	76 2f       	mov	r23, r22
 594:	6a 2f       	mov	r22, r26
 596:	11 24       	eor	r1, r1
 598:	9f 57       	subi	r25, 0x7F	; 127
 59a:	50 40       	sbci	r21, 0x00	; 0
 59c:	9a f0       	brmi	.+38     	; 0x5c4 <.L13^B1>
 59e:	f1 f0       	breq	.+60     	; 0x5dc <.L15^B1>

000005a0 <.L10^B1>:
 5a0:	88 23       	and	r24, r24
 5a2:	4a f0       	brmi	.+18     	; 0x5b6 <.L11^B1>
 5a4:	ee 0f       	add	r30, r30
 5a6:	ff 1f       	adc	r31, r31
 5a8:	bb 1f       	adc	r27, r27
 5aa:	66 1f       	adc	r22, r22
 5ac:	77 1f       	adc	r23, r23
 5ae:	88 1f       	adc	r24, r24
 5b0:	91 50       	subi	r25, 0x01	; 1
 5b2:	50 40       	sbci	r21, 0x00	; 0
 5b4:	a9 f7       	brne	.-22     	; 0x5a0 <.L10^B1>

000005b6 <.L11^B1>:
 5b6:	9e 3f       	cpi	r25, 0xFE	; 254
 5b8:	51 05       	cpc	r21, r1
 5ba:	80 f0       	brcs	.+32     	; 0x5dc <.L15^B1>
 5bc:	0c 94 f5 02 	jmp	0x5ea	; 0x5ea <__fp_inf>

000005c0 <.L12^B1>:
 5c0:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_szero>

000005c4 <.L13^B1>:
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	e4 f3       	brlt	.-8      	; 0x5c0 <.L12^B1>
 5c8:	98 3e       	cpi	r25, 0xE8	; 232
 5ca:	d4 f3       	brlt	.-12     	; 0x5c0 <.L12^B1>

000005cc <.L14^B1>:
 5cc:	86 95       	lsr	r24
 5ce:	77 95       	ror	r23
 5d0:	67 95       	ror	r22
 5d2:	b7 95       	ror	r27
 5d4:	f7 95       	ror	r31
 5d6:	e7 95       	ror	r30
 5d8:	9f 5f       	subi	r25, 0xFF	; 255
 5da:	c1 f7       	brne	.-16     	; 0x5cc <.L14^B1>

000005dc <.L15^B1>:
 5dc:	fe 2b       	or	r31, r30
 5de:	88 0f       	add	r24, r24
 5e0:	91 1d       	adc	r25, r1
 5e2:	96 95       	lsr	r25
 5e4:	87 95       	ror	r24
 5e6:	97 f9       	bld	r25, 7
 5e8:	08 95       	ret

000005ea <__fp_inf>:
 5ea:	97 f9       	bld	r25, 7
 5ec:	9f 67       	ori	r25, 0x7F	; 127
 5ee:	80 e8       	ldi	r24, 0x80	; 128
 5f0:	70 e0       	ldi	r23, 0x00	; 0
 5f2:	60 e0       	ldi	r22, 0x00	; 0
 5f4:	08 95       	ret

000005f6 <__fp_nan>:
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	80 ec       	ldi	r24, 0xC0	; 192
 5fa:	08 95       	ret

000005fc <__fp_pscA>:
 5fc:	00 24       	eor	r0, r0
 5fe:	0a 94       	dec	r0
 600:	16 16       	cp	r1, r22
 602:	17 06       	cpc	r1, r23
 604:	18 06       	cpc	r1, r24
 606:	09 06       	cpc	r0, r25
 608:	08 95       	ret

0000060a <__fp_pscB>:
 60a:	00 24       	eor	r0, r0
 60c:	0a 94       	dec	r0
 60e:	12 16       	cp	r1, r18
 610:	13 06       	cpc	r1, r19
 612:	14 06       	cpc	r1, r20
 614:	05 06       	cpc	r0, r21
 616:	08 95       	ret

00000618 <__fp_round>:
 618:	09 2e       	mov	r0, r25
 61a:	03 94       	inc	r0
 61c:	00 0c       	add	r0, r0
 61e:	11 f4       	brne	.+4      	; 0x624 <.L1^B1>
 620:	88 23       	and	r24, r24
 622:	52 f0       	brmi	.+20     	; 0x638 <.L3^B1>

00000624 <.L1^B1>:
 624:	bb 0f       	add	r27, r27
 626:	40 f4       	brcc	.+16     	; 0x638 <.L3^B1>
 628:	bf 2b       	or	r27, r31
 62a:	11 f4       	brne	.+4      	; 0x630 <.L2^B1>
 62c:	60 ff       	sbrs	r22, 0
 62e:	04 c0       	rjmp	.+8      	; 0x638 <.L3^B1>

00000630 <.L2^B1>:
 630:	6f 5f       	subi	r22, 0xFF	; 255
 632:	7f 4f       	sbci	r23, 0xFF	; 255
 634:	8f 4f       	sbci	r24, 0xFF	; 255
 636:	9f 4f       	sbci	r25, 0xFF	; 255

00000638 <.L3^B1>:
 638:	08 95       	ret

0000063a <_exit>:
 63a:	f8 94       	cli

0000063c <__stop_program>:
 63c:	ff cf       	rjmp	.-2      	; 0x63c <__stop_program>
