
bin\Debug\Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000956  00000a0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000956  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  00000a0a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000a0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000a0d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a20  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000098  00000000  00000000  00000a60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000fcf  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000d29  00000000  00000000  00001ac7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   000005be  00000000  00000000  000027f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000188  00000000  00000000  00002db0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000005ab  00000000  00000000  00002f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000018e  00000000  00000000  000034e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  48:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  54:	0c 94 0a 03 	jmp	0x614	; 0x614 <__vector_21>
  58:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  5c:	0c 94 4c 03 	jmp	0x698	; 0x698 <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 88 00 	call	0x110	; 0x110 <main>
 108:	0c 94 a9 04 	jmp	0x952	; 0x952 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <main>:
#include "Motor.h"

int main(void)
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62
 118:	c6 56       	subi	r28, 0x66	; 102
 11a:	d1 09       	sbc	r29, r1
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61

00000126 <.Loc.1>:
    init(); // Initialize motor control system
 126:	0e 94 ce 02 	call	0x59c	; 0x59c <init>

0000012a <.L26>:

    while (1)
    {
        enable_lpwm(); // Enable LPWM with PWM
 12a:	0e 94 db 02 	call	0x5b6	; 0x5b6 <enable_lpwm>
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	aa e7       	ldi	r26, 0x7A	; 122
 134:	b4 e4       	ldi	r27, 0x44	; 68
 136:	8d 8f       	std	Y+29, r24	; 0x1d
 138:	9e 8f       	std	Y+30, r25	; 0x1e
 13a:	af 8f       	std	Y+31, r26	; 0x1f
 13c:	b8 a3       	std	Y+32, r27	; 0x20

0000013e <.LBB24>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	4a e7       	ldi	r20, 0x7A	; 122
 144:	55 e4       	ldi	r21, 0x45	; 69
 146:	6d 8d       	ldd	r22, Y+29	; 0x1d
 148:	7e 8d       	ldd	r23, Y+30	; 0x1e
 14a:	8f 8d       	ldd	r24, Y+31	; 0x1f
 14c:	98 a1       	ldd	r25, Y+32	; 0x20
 14e:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 152:	6f ab       	std	Y+55, r22	; 0x37
 154:	78 af       	std	Y+56, r23	; 0x38
 156:	89 af       	std	Y+57, r24	; 0x39
 158:	9a af       	std	Y+58, r25	; 0x3a
 15a:	8f a9       	ldd	r24, Y+55	; 0x37
 15c:	98 ad       	ldd	r25, Y+56	; 0x38
 15e:	a9 ad       	ldd	r26, Y+57	; 0x39
 160:	ba ad       	ldd	r27, Y+58	; 0x3a
 162:	89 a3       	std	Y+33, r24	; 0x21
 164:	9a a3       	std	Y+34, r25	; 0x22
 166:	ab a3       	std	Y+35, r26	; 0x23
 168:	bc a3       	std	Y+36, r27	; 0x24

0000016a <.Loc.4>:
	if (__tmp < 1.0)
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	40 e8       	ldi	r20, 0x80	; 128
 170:	5f e3       	ldi	r21, 0x3F	; 63
 172:	69 a1       	ldd	r22, Y+33	; 0x21
 174:	7a a1       	ldd	r23, Y+34	; 0x22
 176:	8b a1       	ldd	r24, Y+35	; 0x23
 178:	9c a1       	ldd	r25, Y+36	; 0x24
 17a:	0e 94 8e 03 	call	0x71c	; 0x71c <__cmpsf2>
 17e:	88 23       	and	r24, r24
 180:	2c f4       	brge	.+10     	; 0x18c <.L33>

00000182 <.Loc.5>:
		__ticks = 1;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	9e a3       	std	Y+38, r25	; 0x26
 188:	8d a3       	std	Y+37, r24	; 0x25
 18a:	5e c0       	rjmp	.+188    	; 0x248 <.L4>

0000018c <.L33>:
	else if (__tmp > 65535)
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	3f ef       	ldi	r19, 0xFF	; 255
 190:	4f e7       	ldi	r20, 0x7F	; 127
 192:	57 e4       	ldi	r21, 0x47	; 71
 194:	69 a1       	ldd	r22, Y+33	; 0x21
 196:	7a a1       	ldd	r23, Y+34	; 0x22
 198:	8b a1       	ldd	r24, Y+35	; 0x23
 19a:	9c a1       	ldd	r25, Y+36	; 0x24
 19c:	0e 94 0f 04 	call	0x81e	; 0x81e <__gesf2>
 1a0:	88 23       	and	r24, r24
 1a2:	09 f0       	breq	.+2      	; 0x1a6 <L0^A>

000001a4 <L0^A>:
 1a4:	0c f4       	brge	.+2      	; 0x1a8 <.Loc.7>

000001a6 <L0^A>:
 1a6:	3e c0       	rjmp	.+124    	; 0x224 <.L34>

000001a8 <.Loc.7>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	40 e2       	ldi	r20, 0x20	; 32
 1ae:	51 e4       	ldi	r21, 0x41	; 65
 1b0:	6d 8d       	ldd	r22, Y+29	; 0x1d
 1b2:	7e 8d       	ldd	r23, Y+30	; 0x1e
 1b4:	8f 8d       	ldd	r24, Y+31	; 0x1f
 1b6:	98 a1       	ldd	r25, Y+32	; 0x20
 1b8:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 1bc:	6b af       	std	Y+59, r22	; 0x3b
 1be:	7c af       	std	Y+60, r23	; 0x3c
 1c0:	8d af       	std	Y+61, r24	; 0x3d
 1c2:	9e af       	std	Y+62, r25	; 0x3e
 1c4:	8b ad       	ldd	r24, Y+59	; 0x3b
 1c6:	9c ad       	ldd	r25, Y+60	; 0x3c
 1c8:	ad ad       	ldd	r26, Y+61	; 0x3d
 1ca:	be ad       	ldd	r27, Y+62	; 0x3e
 1cc:	8b ab       	std	Y+51, r24	; 0x33
 1ce:	9c ab       	std	Y+52, r25	; 0x34
 1d0:	ad ab       	std	Y+53, r26	; 0x35
 1d2:	be ab       	std	Y+54, r27	; 0x36

000001d4 <.Loc.8>:
 1d4:	6b a9       	ldd	r22, Y+51	; 0x33
 1d6:	7c a9       	ldd	r23, Y+52	; 0x34
 1d8:	8d a9       	ldd	r24, Y+53	; 0x35
 1da:	9e a9       	ldd	r25, Y+54	; 0x36
 1dc:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 1e0:	23 96       	adiw	r28, 0x03	; 3
 1e2:	6c af       	std	Y+60, r22	; 0x3c
 1e4:	7d af       	std	Y+61, r23	; 0x3d
 1e6:	8e af       	std	Y+62, r24	; 0x3e
 1e8:	9f af       	std	Y+63, r25	; 0x3f
 1ea:	23 97       	sbiw	r28, 0x03	; 3
 1ec:	21 96       	adiw	r28, 0x01	; 1
 1ee:	ae ad       	ldd	r26, Y+62	; 0x3e
 1f0:	bf ad       	ldd	r27, Y+63	; 0x3f
 1f2:	21 97       	sbiw	r28, 0x01	; 1
 1f4:	be a3       	std	Y+38, r27	; 0x26
 1f6:	ad a3       	std	Y+37, r26	; 0x25

000001f8 <.Loc.9>:
		while(__ticks)
 1f8:	10 c0       	rjmp	.+32     	; 0x21a <.L7>

000001fa <.L8>:
 1fa:	80 e9       	ldi	r24, 0x90	; 144
 1fc:	91 e0       	ldi	r25, 0x01	; 1
 1fe:	98 a7       	std	Y+40, r25	; 0x28
 200:	8f a3       	std	Y+39, r24	; 0x27

00000202 <.LBB26>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 202:	8f a1       	ldd	r24, Y+39	; 0x27
 204:	98 a5       	ldd	r25, Y+40	; 0x28

00000206 <.L1^B1>:
 206:	01 97       	sbiw	r24, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <.L1^B1>
 20a:	98 a7       	std	Y+40, r25	; 0x28
 20c:	8f a3       	std	Y+39, r24	; 0x27

0000020e <.Loc.11>:
	...

00000210 <.LBE26>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 210:	8d a1       	ldd	r24, Y+37	; 0x25
 212:	9e a1       	ldd	r25, Y+38	; 0x26
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	9e a3       	std	Y+38, r25	; 0x26
 218:	8d a3       	std	Y+37, r24	; 0x25

0000021a <.L7>:
		while(__ticks)
 21a:	8d a1       	ldd	r24, Y+37	; 0x25
 21c:	9e a1       	ldd	r25, Y+38	; 0x26
 21e:	00 97       	sbiw	r24, 0x00	; 0
 220:	61 f7       	brne	.-40     	; 0x1fa <.L8>

00000222 <.Loc.14>:
		}
		return;
 222:	1d c0       	rjmp	.+58     	; 0x25e <.L9>

00000224 <.L34>:
	}
	else
		__ticks = (uint16_t)__tmp;
 224:	69 a1       	ldd	r22, Y+33	; 0x21
 226:	7a a1       	ldd	r23, Y+34	; 0x22
 228:	8b a1       	ldd	r24, Y+35	; 0x23
 22a:	9c a1       	ldd	r25, Y+36	; 0x24
 22c:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 230:	27 96       	adiw	r28, 0x07	; 7
 232:	6c af       	std	Y+60, r22	; 0x3c
 234:	7d af       	std	Y+61, r23	; 0x3d
 236:	8e af       	std	Y+62, r24	; 0x3e
 238:	9f af       	std	Y+63, r25	; 0x3f
 23a:	27 97       	sbiw	r28, 0x07	; 7
 23c:	25 96       	adiw	r28, 0x05	; 5
 23e:	8e ad       	ldd	r24, Y+62	; 0x3e
 240:	9f ad       	ldd	r25, Y+63	; 0x3f
 242:	25 97       	sbiw	r28, 0x05	; 5
 244:	9e a3       	std	Y+38, r25	; 0x26
 246:	8d a3       	std	Y+37, r24	; 0x25

00000248 <.L4>:
 248:	8d a1       	ldd	r24, Y+37	; 0x25
 24a:	9e a1       	ldd	r25, Y+38	; 0x26
 24c:	9a a7       	std	Y+42, r25	; 0x2a
 24e:	89 a7       	std	Y+41, r24	; 0x29

00000250 <.LBB28>:
 250:	89 a5       	ldd	r24, Y+41	; 0x29
 252:	9a a5       	ldd	r25, Y+42	; 0x2a

00000254 <.L1^B2>:
 254:	01 97       	sbiw	r24, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <.L1^B2>
 258:	9a a7       	std	Y+42, r25	; 0x2a
 25a:	89 a7       	std	Y+41, r24	; 0x29

0000025c <.Loc.17>:
	...

0000025e <.L9>:
        _delay_ms(1000); // Run for 1 second

        enable_rpwm(); // Enable RPWM with PWM
 25e:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <enable_rpwm>
 262:	80 e0       	ldi	r24, 0x00	; 0
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	aa e7       	ldi	r26, 0x7A	; 122
 268:	b4 e4       	ldi	r27, 0x44	; 68
 26a:	8f 87       	std	Y+15, r24	; 0x0f
 26c:	98 8b       	std	Y+16, r25	; 0x10
 26e:	a9 8b       	std	Y+17, r26	; 0x11
 270:	ba 8b       	std	Y+18, r27	; 0x12

00000272 <.LBB30>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 272:	20 e0       	ldi	r18, 0x00	; 0
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	4a e7       	ldi	r20, 0x7A	; 122
 278:	55 e4       	ldi	r21, 0x45	; 69
 27a:	6f 85       	ldd	r22, Y+15	; 0x0f
 27c:	78 89       	ldd	r23, Y+16	; 0x10
 27e:	89 89       	ldd	r24, Y+17	; 0x11
 280:	9a 89       	ldd	r25, Y+18	; 0x12
 282:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 286:	2b 96       	adiw	r28, 0x0b	; 11
 288:	6c af       	std	Y+60, r22	; 0x3c
 28a:	7d af       	std	Y+61, r23	; 0x3d
 28c:	8e af       	std	Y+62, r24	; 0x3e
 28e:	9f af       	std	Y+63, r25	; 0x3f
 290:	2b 97       	sbiw	r28, 0x0b	; 11
 292:	2b 96       	adiw	r28, 0x0b	; 11
 294:	8c ad       	ldd	r24, Y+60	; 0x3c
 296:	9d ad       	ldd	r25, Y+61	; 0x3d
 298:	ae ad       	ldd	r26, Y+62	; 0x3e
 29a:	bf ad       	ldd	r27, Y+63	; 0x3f
 29c:	2b 97       	sbiw	r28, 0x0b	; 11
 29e:	8b 8b       	std	Y+19, r24	; 0x13
 2a0:	9c 8b       	std	Y+20, r25	; 0x14
 2a2:	ad 8b       	std	Y+21, r26	; 0x15
 2a4:	be 8b       	std	Y+22, r27	; 0x16

000002a6 <.Loc.20>:
	if (__tmp < 1.0)
 2a6:	20 e0       	ldi	r18, 0x00	; 0
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	40 e8       	ldi	r20, 0x80	; 128
 2ac:	5f e3       	ldi	r21, 0x3F	; 63
 2ae:	6b 89       	ldd	r22, Y+19	; 0x13
 2b0:	7c 89       	ldd	r23, Y+20	; 0x14
 2b2:	8d 89       	ldd	r24, Y+21	; 0x15
 2b4:	9e 89       	ldd	r25, Y+22	; 0x16
 2b6:	0e 94 8e 03 	call	0x71c	; 0x71c <__cmpsf2>
 2ba:	88 23       	and	r24, r24
 2bc:	2c f4       	brge	.+10     	; 0x2c8 <.L35>

000002be <.Loc.21>:
		__ticks = 1;
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	98 8f       	std	Y+24, r25	; 0x18
 2c4:	8f 8b       	std	Y+23, r24	; 0x17
 2c6:	62 c0       	rjmp	.+196    	; 0x38c <.L12>

000002c8 <.L35>:
	else if (__tmp > 65535)
 2c8:	20 e0       	ldi	r18, 0x00	; 0
 2ca:	3f ef       	ldi	r19, 0xFF	; 255
 2cc:	4f e7       	ldi	r20, 0x7F	; 127
 2ce:	57 e4       	ldi	r21, 0x47	; 71
 2d0:	6b 89       	ldd	r22, Y+19	; 0x13
 2d2:	7c 89       	ldd	r23, Y+20	; 0x14
 2d4:	8d 89       	ldd	r24, Y+21	; 0x15
 2d6:	9e 89       	ldd	r25, Y+22	; 0x16
 2d8:	0e 94 0f 04 	call	0x81e	; 0x81e <__gesf2>
 2dc:	88 23       	and	r24, r24
 2de:	09 f0       	breq	.+2      	; 0x2e2 <L0^A>

000002e0 <L0^A>:
 2e0:	0c f4       	brge	.+2      	; 0x2e4 <.Loc.23>

000002e2 <L0^A>:
 2e2:	42 c0       	rjmp	.+132    	; 0x368 <.L36>

000002e4 <.Loc.23>:
		__ticks = (uint16_t) (__ms * 10.0);
 2e4:	20 e0       	ldi	r18, 0x00	; 0
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e2       	ldi	r20, 0x20	; 32
 2ea:	51 e4       	ldi	r21, 0x41	; 65
 2ec:	6f 85       	ldd	r22, Y+15	; 0x0f
 2ee:	78 89       	ldd	r23, Y+16	; 0x10
 2f0:	89 89       	ldd	r24, Y+17	; 0x11
 2f2:	9a 89       	ldd	r25, Y+18	; 0x12
 2f4:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 2f8:	2f 96       	adiw	r28, 0x0f	; 15
 2fa:	6c af       	std	Y+60, r22	; 0x3c
 2fc:	7d af       	std	Y+61, r23	; 0x3d
 2fe:	8e af       	std	Y+62, r24	; 0x3e
 300:	9f af       	std	Y+63, r25	; 0x3f
 302:	2f 97       	sbiw	r28, 0x0f	; 15
 304:	2f 96       	adiw	r28, 0x0f	; 15
 306:	8c ad       	ldd	r24, Y+60	; 0x3c
 308:	9d ad       	ldd	r25, Y+61	; 0x3d
 30a:	ae ad       	ldd	r26, Y+62	; 0x3e
 30c:	bf ad       	ldd	r27, Y+63	; 0x3f
 30e:	2f 97       	sbiw	r28, 0x0f	; 15
 310:	8f a7       	std	Y+47, r24	; 0x2f
 312:	98 ab       	std	Y+48, r25	; 0x30
 314:	a9 ab       	std	Y+49, r26	; 0x31
 316:	ba ab       	std	Y+50, r27	; 0x32

00000318 <.Loc.24>:
 318:	6f a5       	ldd	r22, Y+47	; 0x2f
 31a:	78 a9       	ldd	r23, Y+48	; 0x30
 31c:	89 a9       	ldd	r24, Y+49	; 0x31
 31e:	9a a9       	ldd	r25, Y+50	; 0x32
 320:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 324:	63 96       	adiw	r28, 0x13	; 19
 326:	6c af       	std	Y+60, r22	; 0x3c
 328:	7d af       	std	Y+61, r23	; 0x3d
 32a:	8e af       	std	Y+62, r24	; 0x3e
 32c:	9f af       	std	Y+63, r25	; 0x3f
 32e:	63 97       	sbiw	r28, 0x13	; 19
 330:	61 96       	adiw	r28, 0x11	; 17
 332:	ae ad       	ldd	r26, Y+62	; 0x3e
 334:	bf ad       	ldd	r27, Y+63	; 0x3f
 336:	61 97       	sbiw	r28, 0x11	; 17
 338:	b8 8f       	std	Y+24, r27	; 0x18
 33a:	af 8b       	std	Y+23, r26	; 0x17

0000033c <.Loc.25>:
		while(__ticks)
 33c:	10 c0       	rjmp	.+32     	; 0x35e <.L15>

0000033e <.L16>:
 33e:	80 e9       	ldi	r24, 0x90	; 144
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	9a 8f       	std	Y+26, r25	; 0x1a
 344:	89 8f       	std	Y+25, r24	; 0x19

00000346 <.LBB32>:
 346:	89 8d       	ldd	r24, Y+25	; 0x19
 348:	9a 8d       	ldd	r25, Y+26	; 0x1a

0000034a <.L1^B3>:
 34a:	01 97       	sbiw	r24, 0x01	; 1
 34c:	f1 f7       	brne	.-4      	; 0x34a <.L1^B3>
 34e:	9a 8f       	std	Y+26, r25	; 0x1a
 350:	89 8f       	std	Y+25, r24	; 0x19

00000352 <.Loc.27>:
	...

00000354 <.LBE32>:
			__ticks --;
 354:	8f 89       	ldd	r24, Y+23	; 0x17
 356:	98 8d       	ldd	r25, Y+24	; 0x18
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	98 8f       	std	Y+24, r25	; 0x18
 35c:	8f 8b       	std	Y+23, r24	; 0x17

0000035e <.L15>:
		while(__ticks)
 35e:	8f 89       	ldd	r24, Y+23	; 0x17
 360:	98 8d       	ldd	r25, Y+24	; 0x18
 362:	00 97       	sbiw	r24, 0x00	; 0
 364:	61 f7       	brne	.-40     	; 0x33e <.L16>

00000366 <.Loc.30>:
		return;
 366:	1d c0       	rjmp	.+58     	; 0x3a2 <.L17>

00000368 <.L36>:
		__ticks = (uint16_t)__tmp;
 368:	6b 89       	ldd	r22, Y+19	; 0x13
 36a:	7c 89       	ldd	r23, Y+20	; 0x14
 36c:	8d 89       	ldd	r24, Y+21	; 0x15
 36e:	9e 89       	ldd	r25, Y+22	; 0x16
 370:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 374:	67 96       	adiw	r28, 0x17	; 23
 376:	6c af       	std	Y+60, r22	; 0x3c
 378:	7d af       	std	Y+61, r23	; 0x3d
 37a:	8e af       	std	Y+62, r24	; 0x3e
 37c:	9f af       	std	Y+63, r25	; 0x3f
 37e:	67 97       	sbiw	r28, 0x17	; 23
 380:	65 96       	adiw	r28, 0x15	; 21
 382:	8e ad       	ldd	r24, Y+62	; 0x3e
 384:	9f ad       	ldd	r25, Y+63	; 0x3f
 386:	65 97       	sbiw	r28, 0x15	; 21
 388:	98 8f       	std	Y+24, r25	; 0x18
 38a:	8f 8b       	std	Y+23, r24	; 0x17

0000038c <.L12>:
 38c:	8f 89       	ldd	r24, Y+23	; 0x17
 38e:	98 8d       	ldd	r25, Y+24	; 0x18
 390:	9c 8f       	std	Y+28, r25	; 0x1c
 392:	8b 8f       	std	Y+27, r24	; 0x1b

00000394 <.LBB34>:
 394:	8b 8d       	ldd	r24, Y+27	; 0x1b
 396:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000398 <.L1^B4>:
 398:	01 97       	sbiw	r24, 0x01	; 1
 39a:	f1 f7       	brne	.-4      	; 0x398 <.L1^B4>
 39c:	9c 8f       	std	Y+28, r25	; 0x1c
 39e:	8b 8f       	std	Y+27, r24	; 0x1b

000003a0 <.Loc.33>:
	...

000003a2 <.L17>:
        _delay_ms(1000); // Run for 1 second

        disable_pwm(); // Disable both
 3a2:	0e 94 f5 02 	call	0x5ea	; 0x5ea <disable_pwm>
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	aa e7       	ldi	r26, 0x7A	; 122
 3ac:	b4 e4       	ldi	r27, 0x44	; 68
 3ae:	89 83       	std	Y+1, r24	; 0x01
 3b0:	9a 83       	std	Y+2, r25	; 0x02
 3b2:	ab 83       	std	Y+3, r26	; 0x03
 3b4:	bc 83       	std	Y+4, r27	; 0x04

000003b6 <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 3b6:	20 e0       	ldi	r18, 0x00	; 0
 3b8:	30 e0       	ldi	r19, 0x00	; 0
 3ba:	4a e7       	ldi	r20, 0x7A	; 122
 3bc:	55 e4       	ldi	r21, 0x45	; 69
 3be:	69 81       	ldd	r22, Y+1	; 0x01
 3c0:	7a 81       	ldd	r23, Y+2	; 0x02
 3c2:	8b 81       	ldd	r24, Y+3	; 0x03
 3c4:	9c 81       	ldd	r25, Y+4	; 0x04
 3c6:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 3ca:	6b 96       	adiw	r28, 0x1b	; 27
 3cc:	6c af       	std	Y+60, r22	; 0x3c
 3ce:	7d af       	std	Y+61, r23	; 0x3d
 3d0:	8e af       	std	Y+62, r24	; 0x3e
 3d2:	9f af       	std	Y+63, r25	; 0x3f
 3d4:	6b 97       	sbiw	r28, 0x1b	; 27
 3d6:	6b 96       	adiw	r28, 0x1b	; 27
 3d8:	8c ad       	ldd	r24, Y+60	; 0x3c
 3da:	9d ad       	ldd	r25, Y+61	; 0x3d
 3dc:	ae ad       	ldd	r26, Y+62	; 0x3e
 3de:	bf ad       	ldd	r27, Y+63	; 0x3f
 3e0:	6b 97       	sbiw	r28, 0x1b	; 27
 3e2:	8d 83       	std	Y+5, r24	; 0x05
 3e4:	9e 83       	std	Y+6, r25	; 0x06
 3e6:	af 83       	std	Y+7, r26	; 0x07
 3e8:	b8 87       	std	Y+8, r27	; 0x08

000003ea <.Loc.36>:
	if (__tmp < 1.0)
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	40 e8       	ldi	r20, 0x80	; 128
 3f0:	5f e3       	ldi	r21, 0x3F	; 63
 3f2:	6d 81       	ldd	r22, Y+5	; 0x05
 3f4:	7e 81       	ldd	r23, Y+6	; 0x06
 3f6:	8f 81       	ldd	r24, Y+7	; 0x07
 3f8:	98 85       	ldd	r25, Y+8	; 0x08
 3fa:	0e 94 8e 03 	call	0x71c	; 0x71c <__cmpsf2>
 3fe:	88 23       	and	r24, r24
 400:	2c f4       	brge	.+10     	; 0x40c <.L37>

00000402 <.Loc.37>:
		__ticks = 1;
 402:	81 e0       	ldi	r24, 0x01	; 1
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	9a 87       	std	Y+10, r25	; 0x0a
 408:	89 87       	std	Y+9, r24	; 0x09
 40a:	62 c0       	rjmp	.+196    	; 0x4d0 <.L20>

0000040c <.L37>:
	else if (__tmp > 65535)
 40c:	20 e0       	ldi	r18, 0x00	; 0
 40e:	3f ef       	ldi	r19, 0xFF	; 255
 410:	4f e7       	ldi	r20, 0x7F	; 127
 412:	57 e4       	ldi	r21, 0x47	; 71
 414:	6d 81       	ldd	r22, Y+5	; 0x05
 416:	7e 81       	ldd	r23, Y+6	; 0x06
 418:	8f 81       	ldd	r24, Y+7	; 0x07
 41a:	98 85       	ldd	r25, Y+8	; 0x08
 41c:	0e 94 0f 04 	call	0x81e	; 0x81e <__gesf2>
 420:	88 23       	and	r24, r24
 422:	09 f0       	breq	.+2      	; 0x426 <L0^A>

00000424 <L0^A>:
 424:	0c f4       	brge	.+2      	; 0x428 <.Loc.39>

00000426 <L0^A>:
 426:	42 c0       	rjmp	.+132    	; 0x4ac <.L38>

00000428 <.Loc.39>:
		__ticks = (uint16_t) (__ms * 10.0);
 428:	20 e0       	ldi	r18, 0x00	; 0
 42a:	30 e0       	ldi	r19, 0x00	; 0
 42c:	40 e2       	ldi	r20, 0x20	; 32
 42e:	51 e4       	ldi	r21, 0x41	; 65
 430:	69 81       	ldd	r22, Y+1	; 0x01
 432:	7a 81       	ldd	r23, Y+2	; 0x02
 434:	8b 81       	ldd	r24, Y+3	; 0x03
 436:	9c 81       	ldd	r25, Y+4	; 0x04
 438:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
 43c:	6f 96       	adiw	r28, 0x1f	; 31
 43e:	6c af       	std	Y+60, r22	; 0x3c
 440:	7d af       	std	Y+61, r23	; 0x3d
 442:	8e af       	std	Y+62, r24	; 0x3e
 444:	9f af       	std	Y+63, r25	; 0x3f
 446:	6f 97       	sbiw	r28, 0x1f	; 31
 448:	6f 96       	adiw	r28, 0x1f	; 31
 44a:	8c ad       	ldd	r24, Y+60	; 0x3c
 44c:	9d ad       	ldd	r25, Y+61	; 0x3d
 44e:	ae ad       	ldd	r26, Y+62	; 0x3e
 450:	bf ad       	ldd	r27, Y+63	; 0x3f
 452:	6f 97       	sbiw	r28, 0x1f	; 31
 454:	8b a7       	std	Y+43, r24	; 0x2b
 456:	9c a7       	std	Y+44, r25	; 0x2c
 458:	ad a7       	std	Y+45, r26	; 0x2d
 45a:	be a7       	std	Y+46, r27	; 0x2e

0000045c <.Loc.40>:
 45c:	6b a5       	ldd	r22, Y+43	; 0x2b
 45e:	7c a5       	ldd	r23, Y+44	; 0x2c
 460:	8d a5       	ldd	r24, Y+45	; 0x2d
 462:	9e a5       	ldd	r25, Y+46	; 0x2e
 464:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 468:	a3 96       	adiw	r28, 0x23	; 35
 46a:	6c af       	std	Y+60, r22	; 0x3c
 46c:	7d af       	std	Y+61, r23	; 0x3d
 46e:	8e af       	std	Y+62, r24	; 0x3e
 470:	9f af       	std	Y+63, r25	; 0x3f
 472:	a3 97       	sbiw	r28, 0x23	; 35
 474:	a1 96       	adiw	r28, 0x21	; 33
 476:	ae ad       	ldd	r26, Y+62	; 0x3e
 478:	bf ad       	ldd	r27, Y+63	; 0x3f
 47a:	a1 97       	sbiw	r28, 0x21	; 33
 47c:	ba 87       	std	Y+10, r27	; 0x0a
 47e:	a9 87       	std	Y+9, r26	; 0x09

00000480 <.Loc.41>:
		while(__ticks)
 480:	10 c0       	rjmp	.+32     	; 0x4a2 <.L23>

00000482 <.L24>:
 482:	80 e9       	ldi	r24, 0x90	; 144
 484:	91 e0       	ldi	r25, 0x01	; 1
 486:	9c 87       	std	Y+12, r25	; 0x0c
 488:	8b 87       	std	Y+11, r24	; 0x0b

0000048a <.LBB38>:
 48a:	8b 85       	ldd	r24, Y+11	; 0x0b
 48c:	9c 85       	ldd	r25, Y+12	; 0x0c

0000048e <.L1^B5>:
 48e:	01 97       	sbiw	r24, 0x01	; 1
 490:	f1 f7       	brne	.-4      	; 0x48e <.L1^B5>
 492:	9c 87       	std	Y+12, r25	; 0x0c
 494:	8b 87       	std	Y+11, r24	; 0x0b

00000496 <.Loc.43>:
	...

00000498 <.LBE38>:
			__ticks --;
 498:	89 85       	ldd	r24, Y+9	; 0x09
 49a:	9a 85       	ldd	r25, Y+10	; 0x0a
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	9a 87       	std	Y+10, r25	; 0x0a
 4a0:	89 87       	std	Y+9, r24	; 0x09

000004a2 <.L23>:
		while(__ticks)
 4a2:	89 85       	ldd	r24, Y+9	; 0x09
 4a4:	9a 85       	ldd	r25, Y+10	; 0x0a
 4a6:	00 97       	sbiw	r24, 0x00	; 0
 4a8:	61 f7       	brne	.-40     	; 0x482 <.L24>

000004aa <.Loc.46>:
		return;
 4aa:	1d c0       	rjmp	.+58     	; 0x4e6 <.L25>

000004ac <.L38>:
		__ticks = (uint16_t)__tmp;
 4ac:	6d 81       	ldd	r22, Y+5	; 0x05
 4ae:	7e 81       	ldd	r23, Y+6	; 0x06
 4b0:	8f 81       	ldd	r24, Y+7	; 0x07
 4b2:	98 85       	ldd	r25, Y+8	; 0x08
 4b4:	0e 94 93 03 	call	0x726	; 0x726 <__fixunssfsi>
 4b8:	a7 96       	adiw	r28, 0x27	; 39
 4ba:	6c af       	std	Y+60, r22	; 0x3c
 4bc:	7d af       	std	Y+61, r23	; 0x3d
 4be:	8e af       	std	Y+62, r24	; 0x3e
 4c0:	9f af       	std	Y+63, r25	; 0x3f
 4c2:	a7 97       	sbiw	r28, 0x27	; 39
 4c4:	a5 96       	adiw	r28, 0x25	; 37
 4c6:	8e ad       	ldd	r24, Y+62	; 0x3e
 4c8:	9f ad       	ldd	r25, Y+63	; 0x3f
 4ca:	a5 97       	sbiw	r28, 0x25	; 37
 4cc:	9a 87       	std	Y+10, r25	; 0x0a
 4ce:	89 87       	std	Y+9, r24	; 0x09

000004d0 <.L20>:
 4d0:	89 85       	ldd	r24, Y+9	; 0x09
 4d2:	9a 85       	ldd	r25, Y+10	; 0x0a
 4d4:	9e 87       	std	Y+14, r25	; 0x0e
 4d6:	8d 87       	std	Y+13, r24	; 0x0d

000004d8 <.LBB40>:
 4d8:	8d 85       	ldd	r24, Y+13	; 0x0d
 4da:	9e 85       	ldd	r25, Y+14	; 0x0e

000004dc <.L1^B6>:
 4dc:	01 97       	sbiw	r24, 0x01	; 1
 4de:	f1 f7       	brne	.-4      	; 0x4dc <.L1^B6>
 4e0:	9e 87       	std	Y+14, r25	; 0x0e
 4e2:	8d 87       	std	Y+13, r24	; 0x0d

000004e4 <.Loc.49>:
	...

000004e6 <.L25>:
        enable_lpwm(); // Enable LPWM with PWM
 4e6:	00 00       	nop
 4e8:	20 ce       	rjmp	.-960    	; 0x12a <.L26>

000004ea <init_timer>:
// Globale variabele om te kijken of lpwm of rpwm aan staat.
volatile uint8_t lpwm_active = 0;
volatile uint8_t rpwm_active = 0;

void init_timer(void)
{
 4ea:	cf 93       	push	r28
 4ec:	df 93       	push	r29
 4ee:	cd b7       	in	r28, 0x3d	; 61
 4f0:	de b7       	in	r29, 0x3e	; 62

000004f2 <.Loc.1>:
    // Mode 0, Pre-scaler = 64
    TCCR0A = 0;
 4f2:	84 e4       	ldi	r24, 0x44	; 68
 4f4:	90 e0       	ldi	r25, 0x00	; 0

000004f6 <.Loc.2>:
 4f6:	fc 01       	movw	r30, r24
 4f8:	10 82       	st	Z, r1

000004fa <.Loc.3>:
    TCCR0B = (0 << CS02) | (1 << CS01) | (1 << CS00);
 4fa:	85 e4       	ldi	r24, 0x45	; 69
 4fc:	90 e0       	ldi	r25, 0x00	; 0

000004fe <.Loc.4>:
 4fe:	23 e0       	ldi	r18, 0x03	; 3
 500:	fc 01       	movw	r30, r24
 502:	20 83       	st	Z, r18

00000504 <.Loc.5>:

    // 5-% duty cycle (0 - 255) = (0% - 100%)
    OCR0A = 127;
 504:	87 e4       	ldi	r24, 0x47	; 71
 506:	90 e0       	ldi	r25, 0x00	; 0

00000508 <.Loc.6>:
 508:	2f e7       	ldi	r18, 0x7F	; 127
 50a:	fc 01       	movw	r30, r24
 50c:	20 83       	st	Z, r18

0000050e <.Loc.7>:

    // Interrupt op OCA en OVF
    TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);
 50e:	8e e6       	ldi	r24, 0x6E	; 110
 510:	90 e0       	ldi	r25, 0x00	; 0

00000512 <.Loc.8>:
 512:	23 e0       	ldi	r18, 0x03	; 3
 514:	fc 01       	movw	r30, r24
 516:	20 83       	st	Z, r18

00000518 <.Loc.9>:
}
 518:	00 00       	nop
 51a:	df 91       	pop	r29
 51c:	cf 91       	pop	r28
 51e:	08 95       	ret

00000520 <init_pins>:

void init_pins(void)
{
 520:	cf 93       	push	r28
 522:	df 93       	push	r29
 524:	cd b7       	in	r28, 0x3d	; 61
 526:	de b7       	in	r29, 0x3e	; 62

00000528 <.Loc.11>:
    // Lampjes voor test
    DDRB |= (1 << PB6);
 528:	84 e2       	ldi	r24, 0x24	; 36
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	fc 01       	movw	r30, r24
 52e:	20 81       	ld	r18, Z
 530:	84 e2       	ldi	r24, 0x24	; 36
 532:	90 e0       	ldi	r25, 0x00	; 0

00000534 <.Loc.12>:
 534:	20 64       	ori	r18, 0x40	; 64
 536:	fc 01       	movw	r30, r24
 538:	20 83       	st	Z, r18

0000053a <.Loc.13>:

    // Zet de PWM pins 44 en 46 als output en zet ze uit
    DDRL |= (1 << LPWM) | (1 << RPWM);
 53a:	8a e0       	ldi	r24, 0x0A	; 10
 53c:	91 e0       	ldi	r25, 0x01	; 1
 53e:	fc 01       	movw	r30, r24
 540:	20 81       	ld	r18, Z
 542:	8a e0       	ldi	r24, 0x0A	; 10
 544:	91 e0       	ldi	r25, 0x01	; 1

00000546 <.Loc.14>:
 546:	28 62       	ori	r18, 0x28	; 40
 548:	fc 01       	movw	r30, r24
 54a:	20 83       	st	Z, r18

0000054c <.Loc.15>:
    PORTL &= ~(1 << LPWM) & ~(1 << RPWM);
 54c:	8b e0       	ldi	r24, 0x0B	; 11
 54e:	91 e0       	ldi	r25, 0x01	; 1
 550:	fc 01       	movw	r30, r24
 552:	20 81       	ld	r18, Z

00000554 <.Loc.16>:
 554:	8b e0       	ldi	r24, 0x0B	; 11
 556:	91 e0       	ldi	r25, 0x01	; 1

00000558 <.Loc.17>:
 558:	27 7d       	andi	r18, 0xD7	; 215
 55a:	fc 01       	movw	r30, r24
 55c:	20 83       	st	Z, r18

0000055e <.Loc.18>:

    // Zet pin 22 als output
    DDRA |= (1 << v5);
 55e:	81 e2       	ldi	r24, 0x21	; 33
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	fc 01       	movw	r30, r24
 564:	20 81       	ld	r18, Z
 566:	81 e2       	ldi	r24, 0x21	; 33
 568:	90 e0       	ldi	r25, 0x00	; 0

0000056a <.Loc.19>:
 56a:	21 60       	ori	r18, 0x01	; 1
 56c:	fc 01       	movw	r30, r24
 56e:	20 83       	st	Z, r18

00000570 <.Loc.20>:

    // Zet de pins van knop 1 als pull-up
    DDRF |= (1 << PF1);
 570:	80 e3       	ldi	r24, 0x30	; 48
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	fc 01       	movw	r30, r24
 576:	20 81       	ld	r18, Z
 578:	80 e3       	ldi	r24, 0x30	; 48
 57a:	90 e0       	ldi	r25, 0x00	; 0

0000057c <.Loc.21>:
 57c:	22 60       	ori	r18, 0x02	; 2
 57e:	fc 01       	movw	r30, r24
 580:	20 83       	st	Z, r18

00000582 <.Loc.22>:
    PORTF |= (1 << PF1);
 582:	81 e3       	ldi	r24, 0x31	; 49
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	fc 01       	movw	r30, r24
 588:	20 81       	ld	r18, Z
 58a:	81 e3       	ldi	r24, 0x31	; 49
 58c:	90 e0       	ldi	r25, 0x00	; 0

0000058e <.Loc.23>:
 58e:	22 60       	ori	r18, 0x02	; 2
 590:	fc 01       	movw	r30, r24
 592:	20 83       	st	Z, r18

00000594 <.Loc.24>:
}
 594:	00 00       	nop
 596:	df 91       	pop	r29
 598:	cf 91       	pop	r28
 59a:	08 95       	ret

0000059c <init>:

void init(void)
{
 59c:	cf 93       	push	r28
 59e:	df 93       	push	r29
 5a0:	cd b7       	in	r28, 0x3d	; 61
 5a2:	de b7       	in	r29, 0x3e	; 62

000005a4 <.Loc.26>:
    init_pins();
 5a4:	0e 94 90 02 	call	0x520	; 0x520 <init_pins>

000005a8 <.Loc.27>:
    init_timer();
 5a8:	0e 94 75 02 	call	0x4ea	; 0x4ea <init_timer>

000005ac <.Loc.28>:
    sei();
 5ac:	78 94       	sei

000005ae <.Loc.29>:
}
 5ae:	00 00       	nop
 5b0:	df 91       	pop	r29
 5b2:	cf 91       	pop	r28
 5b4:	08 95       	ret

000005b6 <enable_lpwm>:

void enable_lpwm(void)
{
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	cd b7       	in	r28, 0x3d	; 61
 5bc:	de b7       	in	r29, 0x3e	; 62

000005be <.Loc.31>:
    lpwm_active = 1;
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <lpwm_active>

000005c4 <.Loc.32>:
    rpwm_active = 0;
 5c4:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <rpwm_active>

000005c8 <.Loc.33>:
}
 5c8:	00 00       	nop
 5ca:	df 91       	pop	r29
 5cc:	cf 91       	pop	r28
 5ce:	08 95       	ret

000005d0 <enable_rpwm>:

void enable_rpwm(void)
{
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	cd b7       	in	r28, 0x3d	; 61
 5d6:	de b7       	in	r29, 0x3e	; 62

000005d8 <.Loc.35>:
    rpwm_active = 1;
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	80 93 01 02 	sts	0x0201, r24	; 0x800201 <rpwm_active>

000005de <.Loc.36>:
    lpwm_active = 0;
 5de:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <lpwm_active>

000005e2 <.Loc.37>:
}
 5e2:	00 00       	nop
 5e4:	df 91       	pop	r29
 5e6:	cf 91       	pop	r28
 5e8:	08 95       	ret

000005ea <disable_pwm>:

void disable_pwm(void)
{
 5ea:	cf 93       	push	r28
 5ec:	df 93       	push	r29
 5ee:	cd b7       	in	r28, 0x3d	; 61
 5f0:	de b7       	in	r29, 0x3e	; 62

000005f2 <.Loc.39>:
    lpwm_active = 0;
 5f2:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <lpwm_active>

000005f6 <.Loc.40>:
    rpwm_active = 0;
 5f6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <rpwm_active>

000005fa <.Loc.41>:
    PORTL &= ~(1 << LPWM) & ~(1 << RPWM); // Zet LWPM en RPWM uit
 5fa:	8b e0       	ldi	r24, 0x0B	; 11
 5fc:	91 e0       	ldi	r25, 0x01	; 1
 5fe:	fc 01       	movw	r30, r24
 600:	20 81       	ld	r18, Z

00000602 <.Loc.42>:
 602:	8b e0       	ldi	r24, 0x0B	; 11
 604:	91 e0       	ldi	r25, 0x01	; 1

00000606 <.Loc.43>:
 606:	27 7d       	andi	r18, 0xD7	; 215
 608:	fc 01       	movw	r30, r24
 60a:	20 83       	st	Z, r18

0000060c <.Loc.44>:
}
 60c:	00 00       	nop
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	08 95       	ret

00000614 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 614:	1f 92       	push	r1
 616:	0f 92       	push	r0
 618:	0f b6       	in	r0, 0x3f	; 63
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	0b b6       	in	r0, 0x3b	; 59
 620:	0f 92       	push	r0
 622:	2f 93       	push	r18
 624:	8f 93       	push	r24
 626:	9f 93       	push	r25
 628:	ef 93       	push	r30
 62a:	ff 93       	push	r31
 62c:	cf 93       	push	r28
 62e:	df 93       	push	r29
 630:	cd b7       	in	r28, 0x3d	; 61
 632:	de b7       	in	r29, 0x3e	; 62

00000634 <.Loc.46>:
    if (lpwm_active)
 634:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <lpwm_active>

00000638 <.Loc.47>:
 638:	88 23       	and	r24, r24
 63a:	49 f0       	breq	.+18     	; 0x64e <.L8>

0000063c <.Loc.48>:
    {
        PORTL &= ~(1 << LPWM); // Zet LPWM uit
 63c:	8b e0       	ldi	r24, 0x0B	; 11
 63e:	91 e0       	ldi	r25, 0x01	; 1
 640:	fc 01       	movw	r30, r24
 642:	20 81       	ld	r18, Z

00000644 <.Loc.49>:
 644:	8b e0       	ldi	r24, 0x0B	; 11
 646:	91 e0       	ldi	r25, 0x01	; 1

00000648 <.Loc.50>:
 648:	2f 7d       	andi	r18, 0xDF	; 223
 64a:	fc 01       	movw	r30, r24
 64c:	20 83       	st	Z, r18

0000064e <.L8>:
    }

    if (rpwm_active)
 64e:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rpwm_active>

00000652 <.Loc.52>:
 652:	88 23       	and	r24, r24
 654:	49 f0       	breq	.+18     	; 0x668 <.L9>

00000656 <.Loc.53>:
    {
        PORTL &= ~(1 << RPWM); // Zet RPWM uit
 656:	8b e0       	ldi	r24, 0x0B	; 11
 658:	91 e0       	ldi	r25, 0x01	; 1
 65a:	fc 01       	movw	r30, r24
 65c:	20 81       	ld	r18, Z

0000065e <.Loc.54>:
 65e:	8b e0       	ldi	r24, 0x0B	; 11
 660:	91 e0       	ldi	r25, 0x01	; 1

00000662 <.Loc.55>:
 662:	27 7f       	andi	r18, 0xF7	; 247
 664:	fc 01       	movw	r30, r24
 666:	20 83       	st	Z, r18

00000668 <.L9>:
    }

    DDRB &= ~(1 << PB6); // Update test output
 668:	84 e2       	ldi	r24, 0x24	; 36
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	fc 01       	movw	r30, r24
 66e:	20 81       	ld	r18, Z

00000670 <.Loc.57>:
 670:	84 e2       	ldi	r24, 0x24	; 36
 672:	90 e0       	ldi	r25, 0x00	; 0

00000674 <.Loc.58>:
 674:	2f 7b       	andi	r18, 0xBF	; 191
 676:	fc 01       	movw	r30, r24
 678:	20 83       	st	Z, r18

0000067a <.Loc.59>:
}
 67a:	00 00       	nop
 67c:	df 91       	pop	r29
 67e:	cf 91       	pop	r28
 680:	ff 91       	pop	r31
 682:	ef 91       	pop	r30
 684:	9f 91       	pop	r25
 686:	8f 91       	pop	r24
 688:	2f 91       	pop	r18
 68a:	0f 90       	pop	r0
 68c:	0b be       	out	0x3b, r0	; 59
 68e:	0f 90       	pop	r0
 690:	0f be       	out	0x3f, r0	; 63
 692:	0f 90       	pop	r0
 694:	1f 90       	pop	r1
 696:	18 95       	reti

00000698 <__vector_23>:

ISR(TIMER0_OVF_vect)
{
 698:	1f 92       	push	r1
 69a:	0f 92       	push	r0
 69c:	0f b6       	in	r0, 0x3f	; 63
 69e:	0f 92       	push	r0
 6a0:	11 24       	eor	r1, r1
 6a2:	0b b6       	in	r0, 0x3b	; 59
 6a4:	0f 92       	push	r0
 6a6:	2f 93       	push	r18
 6a8:	8f 93       	push	r24
 6aa:	9f 93       	push	r25
 6ac:	ef 93       	push	r30
 6ae:	ff 93       	push	r31
 6b0:	cf 93       	push	r28
 6b2:	df 93       	push	r29
 6b4:	cd b7       	in	r28, 0x3d	; 61
 6b6:	de b7       	in	r29, 0x3e	; 62

000006b8 <.Loc.61>:
    if (lpwm_active)
 6b8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <lpwm_active>

000006bc <.Loc.62>:
 6bc:	88 23       	and	r24, r24
 6be:	49 f0       	breq	.+18     	; 0x6d2 <.L11>

000006c0 <.Loc.63>:
    {
        PORTL |= (1 << LPWM); // Zet LPWM aan
 6c0:	8b e0       	ldi	r24, 0x0B	; 11
 6c2:	91 e0       	ldi	r25, 0x01	; 1
 6c4:	fc 01       	movw	r30, r24
 6c6:	20 81       	ld	r18, Z
 6c8:	8b e0       	ldi	r24, 0x0B	; 11
 6ca:	91 e0       	ldi	r25, 0x01	; 1

000006cc <.Loc.64>:
 6cc:	20 62       	ori	r18, 0x20	; 32
 6ce:	fc 01       	movw	r30, r24
 6d0:	20 83       	st	Z, r18

000006d2 <.L11>:
    }

    if (rpwm_active)
 6d2:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <rpwm_active>

000006d6 <.Loc.66>:
 6d6:	88 23       	and	r24, r24
 6d8:	49 f0       	breq	.+18     	; 0x6ec <.L12>

000006da <.Loc.67>:
    {
        PORTL |= (1 << RPWM); // Zet RPWM aan
 6da:	8b e0       	ldi	r24, 0x0B	; 11
 6dc:	91 e0       	ldi	r25, 0x01	; 1
 6de:	fc 01       	movw	r30, r24
 6e0:	20 81       	ld	r18, Z
 6e2:	8b e0       	ldi	r24, 0x0B	; 11
 6e4:	91 e0       	ldi	r25, 0x01	; 1

000006e6 <.Loc.68>:
 6e6:	28 60       	ori	r18, 0x08	; 8
 6e8:	fc 01       	movw	r30, r24
 6ea:	20 83       	st	Z, r18

000006ec <.L12>:
    }

    DDRB |= (1 << PB6); // Update test output
 6ec:	84 e2       	ldi	r24, 0x24	; 36
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	fc 01       	movw	r30, r24
 6f2:	20 81       	ld	r18, Z
 6f4:	84 e2       	ldi	r24, 0x24	; 36
 6f6:	90 e0       	ldi	r25, 0x00	; 0

000006f8 <.Loc.70>:
 6f8:	20 64       	ori	r18, 0x40	; 64
 6fa:	fc 01       	movw	r30, r24
 6fc:	20 83       	st	Z, r18

000006fe <.Loc.71>:
}
 6fe:	00 00       	nop
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	ff 91       	pop	r31
 706:	ef 91       	pop	r30
 708:	9f 91       	pop	r25
 70a:	8f 91       	pop	r24
 70c:	2f 91       	pop	r18
 70e:	0f 90       	pop	r0
 710:	0b be       	out	0x3b, r0	; 59
 712:	0f 90       	pop	r0
 714:	0f be       	out	0x3f, r0	; 63
 716:	0f 90       	pop	r0
 718:	1f 90       	pop	r1
 71a:	18 95       	reti

0000071c <__cmpsf2>:
 71c:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_cmp>
 720:	08 f4       	brcc	.+2      	; 0x724 <.L1^B1>
 722:	81 e0       	ldi	r24, 0x01	; 1

00000724 <.L1^B1>:
 724:	08 95       	ret

00000726 <__fixunssfsi>:
 726:	0e 94 ee 03 	call	0x7dc	; 0x7dc <__fp_splitA>
 72a:	88 f0       	brcs	.+34     	; 0x74e <.L_err>
 72c:	9f 57       	subi	r25, 0x7F	; 127
 72e:	98 f0       	brcs	.+38     	; 0x756 <.L_zr>
 730:	b9 2f       	mov	r27, r25
 732:	99 27       	eor	r25, r25
 734:	b7 51       	subi	r27, 0x17	; 23
 736:	b0 f0       	brcs	.+44     	; 0x764 <.L4^B1>
 738:	e1 f0       	breq	.+56     	; 0x772 <.L_sign>

0000073a <.L1^B1>:
 73a:	66 0f       	add	r22, r22
 73c:	77 1f       	adc	r23, r23
 73e:	88 1f       	adc	r24, r24
 740:	99 1f       	adc	r25, r25
 742:	1a f0       	brmi	.+6      	; 0x74a <.L2^B1>
 744:	ba 95       	dec	r27
 746:	c9 f7       	brne	.-14     	; 0x73a <.L1^B1>
 748:	14 c0       	rjmp	.+40     	; 0x772 <.L_sign>

0000074a <.L2^B1>:
 74a:	b1 30       	cpi	r27, 0x01	; 1
 74c:	91 f0       	breq	.+36     	; 0x772 <.L_sign>

0000074e <.L_err>:
 74e:	0e 94 08 04 	call	0x810	; 0x810 <__fp_zero>
 752:	b1 e0       	ldi	r27, 0x01	; 1
 754:	08 95       	ret

00000756 <.L_zr>:
 756:	0c 94 08 04 	jmp	0x810	; 0x810 <__fp_zero>

0000075a <.L3^B1>:
 75a:	67 2f       	mov	r22, r23
 75c:	78 2f       	mov	r23, r24
 75e:	88 27       	eor	r24, r24
 760:	b8 5f       	subi	r27, 0xF8	; 248
 762:	39 f0       	breq	.+14     	; 0x772 <.L_sign>

00000764 <.L4^B1>:
 764:	b9 3f       	cpi	r27, 0xF9	; 249
 766:	cc f3       	brlt	.-14     	; 0x75a <.L3^B1>

00000768 <.L5^B1>:
 768:	86 95       	lsr	r24
 76a:	77 95       	ror	r23
 76c:	67 95       	ror	r22
 76e:	b3 95       	inc	r27
 770:	d9 f7       	brne	.-10     	; 0x768 <.L5^B1>

00000772 <.L_sign>:
 772:	3e f4       	brtc	.+14     	; 0x782 <.L6^B1>
 774:	90 95       	com	r25
 776:	80 95       	com	r24
 778:	70 95       	com	r23
 77a:	61 95       	neg	r22
 77c:	7f 4f       	sbci	r23, 0xFF	; 255
 77e:	8f 4f       	sbci	r24, 0xFF	; 255
 780:	9f 4f       	sbci	r25, 0xFF	; 255

00000782 <.L6^B1>:
 782:	08 95       	ret

00000784 <__fp_cmp>:
 784:	99 0f       	add	r25, r25
 786:	00 08       	sbc	r0, r0
 788:	55 0f       	add	r21, r21
 78a:	aa 0b       	sbc	r26, r26
 78c:	e0 e8       	ldi	r30, 0x80	; 128
 78e:	fe ef       	ldi	r31, 0xFE	; 254
 790:	16 16       	cp	r1, r22
 792:	17 06       	cpc	r1, r23
 794:	e8 07       	cpc	r30, r24
 796:	f9 07       	cpc	r31, r25
 798:	c0 f0       	brcs	.+48     	; 0x7ca <.L9^B1>
 79a:	12 16       	cp	r1, r18
 79c:	13 06       	cpc	r1, r19
 79e:	e4 07       	cpc	r30, r20
 7a0:	f5 07       	cpc	r31, r21
 7a2:	98 f0       	brcs	.+38     	; 0x7ca <.L9^B1>
 7a4:	62 1b       	sub	r22, r18
 7a6:	73 0b       	sbc	r23, r19
 7a8:	84 0b       	sbc	r24, r20
 7aa:	95 0b       	sbc	r25, r21
 7ac:	39 f4       	brne	.+14     	; 0x7bc <.L1^B1>
 7ae:	0a 26       	eor	r0, r26
 7b0:	61 f0       	breq	.+24     	; 0x7ca <.L9^B1>
 7b2:	23 2b       	or	r18, r19
 7b4:	24 2b       	or	r18, r20
 7b6:	25 2b       	or	r18, r21
 7b8:	21 f4       	brne	.+8      	; 0x7c2 <.L2^B1>
 7ba:	08 95       	ret

000007bc <.L1^B1>:
 7bc:	0a 26       	eor	r0, r26
 7be:	09 f4       	brne	.+2      	; 0x7c2 <.L2^B1>
 7c0:	a1 40       	sbci	r26, 0x01	; 1

000007c2 <.L2^B1>:
 7c2:	a6 95       	lsr	r26
 7c4:	8f ef       	ldi	r24, 0xFF	; 255
 7c6:	81 1d       	adc	r24, r1
 7c8:	81 1d       	adc	r24, r1

000007ca <.L9^B1>:
 7ca:	08 95       	ret

000007cc <__fp_split3>:
 7cc:	57 fd       	sbrc	r21, 7
 7ce:	90 58       	subi	r25, 0x80	; 128
 7d0:	44 0f       	add	r20, r20
 7d2:	55 1f       	adc	r21, r21
 7d4:	59 f0       	breq	.+22     	; 0x7ec <.L4^B1>
 7d6:	5f 3f       	cpi	r21, 0xFF	; 255
 7d8:	71 f0       	breq	.+28     	; 0x7f6 <.L5^B1>

000007da <.L1^B1>:
 7da:	47 95       	ror	r20

000007dc <__fp_splitA>:
 7dc:	88 0f       	add	r24, r24
 7de:	97 fb       	bst	r25, 7
 7e0:	99 1f       	adc	r25, r25
 7e2:	61 f0       	breq	.+24     	; 0x7fc <.L6^B1>
 7e4:	9f 3f       	cpi	r25, 0xFF	; 255
 7e6:	79 f0       	breq	.+30     	; 0x806 <.L7^B1>

000007e8 <.L3^B1>:
 7e8:	87 95       	ror	r24
 7ea:	08 95       	ret

000007ec <.L4^B1>:
 7ec:	12 16       	cp	r1, r18
 7ee:	13 06       	cpc	r1, r19
 7f0:	14 06       	cpc	r1, r20
 7f2:	55 1f       	adc	r21, r21
 7f4:	f2 cf       	rjmp	.-28     	; 0x7da <.L1^B1>

000007f6 <.L5^B1>:
 7f6:	46 95       	lsr	r20
 7f8:	f1 df       	rcall	.-30     	; 0x7dc <__fp_splitA>
 7fa:	08 c0       	rjmp	.+16     	; 0x80c <.L8^B1>

000007fc <.L6^B1>:
 7fc:	16 16       	cp	r1, r22
 7fe:	17 06       	cpc	r1, r23
 800:	18 06       	cpc	r1, r24
 802:	99 1f       	adc	r25, r25
 804:	f1 cf       	rjmp	.-30     	; 0x7e8 <.L3^B1>

00000806 <.L7^B1>:
 806:	86 95       	lsr	r24
 808:	71 05       	cpc	r23, r1
 80a:	61 05       	cpc	r22, r1

0000080c <.L8^B1>:
 80c:	08 94       	sec
 80e:	08 95       	ret

00000810 <__fp_zero>:
 810:	e8 94       	clt

00000812 <__fp_szero>:
 812:	bb 27       	eor	r27, r27
 814:	66 27       	eor	r22, r22
 816:	77 27       	eor	r23, r23
 818:	cb 01       	movw	r24, r22
 81a:	97 f9       	bld	r25, 7
 81c:	08 95       	ret

0000081e <__gesf2>:
 81e:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_cmp>
 822:	08 f4       	brcc	.+2      	; 0x826 <.L1^B1>
 824:	8f ef       	ldi	r24, 0xFF	; 255

00000826 <.L1^B1>:
 826:	08 95       	ret

00000828 <__mulsf3>:
 828:	0e 94 27 04 	call	0x84e	; 0x84e <__mulsf3x>
 82c:	0c 94 98 04 	jmp	0x930	; 0x930 <__fp_round>

00000830 <.L^B1>:
 830:	0e 94 8a 04 	call	0x914	; 0x914 <__fp_pscA>
 834:	38 f0       	brcs	.+14     	; 0x844 <.L1^B1>
 836:	0e 94 91 04 	call	0x922	; 0x922 <__fp_pscB>
 83a:	20 f0       	brcs	.+8      	; 0x844 <.L1^B1>
 83c:	95 23       	and	r25, r21
 83e:	11 f0       	breq	.+4      	; 0x844 <.L1^B1>
 840:	0c 94 81 04 	jmp	0x902	; 0x902 <__fp_inf>

00000844 <.L1^B1>:
 844:	0c 94 87 04 	jmp	0x90e	; 0x90e <__fp_nan>

00000848 <.L2^B1>:
 848:	11 24       	eor	r1, r1
 84a:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_szero>

0000084e <__mulsf3x>:
 84e:	0e 94 e6 03 	call	0x7cc	; 0x7cc <__fp_split3>
 852:	70 f3       	brcs	.-36     	; 0x830 <.L^B1>

00000854 <__mulsf3_pse>:
 854:	95 9f       	mul	r25, r21
 856:	c1 f3       	breq	.-16     	; 0x848 <.L2^B1>
 858:	95 0f       	add	r25, r21
 85a:	50 e0       	ldi	r21, 0x00	; 0
 85c:	55 1f       	adc	r21, r21
 85e:	62 9f       	mul	r22, r18
 860:	f0 01       	movw	r30, r0
 862:	72 9f       	mul	r23, r18
 864:	bb 27       	eor	r27, r27
 866:	f0 0d       	add	r31, r0
 868:	b1 1d       	adc	r27, r1
 86a:	63 9f       	mul	r22, r19
 86c:	aa 27       	eor	r26, r26
 86e:	f0 0d       	add	r31, r0
 870:	b1 1d       	adc	r27, r1
 872:	aa 1f       	adc	r26, r26
 874:	64 9f       	mul	r22, r20
 876:	66 27       	eor	r22, r22
 878:	b0 0d       	add	r27, r0
 87a:	a1 1d       	adc	r26, r1
 87c:	66 1f       	adc	r22, r22
 87e:	82 9f       	mul	r24, r18
 880:	22 27       	eor	r18, r18
 882:	b0 0d       	add	r27, r0
 884:	a1 1d       	adc	r26, r1
 886:	62 1f       	adc	r22, r18
 888:	73 9f       	mul	r23, r19
 88a:	b0 0d       	add	r27, r0
 88c:	a1 1d       	adc	r26, r1
 88e:	62 1f       	adc	r22, r18
 890:	83 9f       	mul	r24, r19
 892:	a0 0d       	add	r26, r0
 894:	61 1d       	adc	r22, r1
 896:	22 1f       	adc	r18, r18
 898:	74 9f       	mul	r23, r20
 89a:	33 27       	eor	r19, r19
 89c:	a0 0d       	add	r26, r0
 89e:	61 1d       	adc	r22, r1
 8a0:	23 1f       	adc	r18, r19
 8a2:	84 9f       	mul	r24, r20
 8a4:	60 0d       	add	r22, r0
 8a6:	21 1d       	adc	r18, r1
 8a8:	82 2f       	mov	r24, r18
 8aa:	76 2f       	mov	r23, r22
 8ac:	6a 2f       	mov	r22, r26
 8ae:	11 24       	eor	r1, r1
 8b0:	9f 57       	subi	r25, 0x7F	; 127
 8b2:	50 40       	sbci	r21, 0x00	; 0
 8b4:	9a f0       	brmi	.+38     	; 0x8dc <.L13^B1>
 8b6:	f1 f0       	breq	.+60     	; 0x8f4 <.L15^B1>

000008b8 <.L10^B1>:
 8b8:	88 23       	and	r24, r24
 8ba:	4a f0       	brmi	.+18     	; 0x8ce <.L11^B1>
 8bc:	ee 0f       	add	r30, r30
 8be:	ff 1f       	adc	r31, r31
 8c0:	bb 1f       	adc	r27, r27
 8c2:	66 1f       	adc	r22, r22
 8c4:	77 1f       	adc	r23, r23
 8c6:	88 1f       	adc	r24, r24
 8c8:	91 50       	subi	r25, 0x01	; 1
 8ca:	50 40       	sbci	r21, 0x00	; 0
 8cc:	a9 f7       	brne	.-22     	; 0x8b8 <.L10^B1>

000008ce <.L11^B1>:
 8ce:	9e 3f       	cpi	r25, 0xFE	; 254
 8d0:	51 05       	cpc	r21, r1
 8d2:	80 f0       	brcs	.+32     	; 0x8f4 <.L15^B1>
 8d4:	0c 94 81 04 	jmp	0x902	; 0x902 <__fp_inf>

000008d8 <.L12^B1>:
 8d8:	0c 94 09 04 	jmp	0x812	; 0x812 <__fp_szero>

000008dc <.L13^B1>:
 8dc:	5f 3f       	cpi	r21, 0xFF	; 255
 8de:	e4 f3       	brlt	.-8      	; 0x8d8 <.L12^B1>
 8e0:	98 3e       	cpi	r25, 0xE8	; 232
 8e2:	d4 f3       	brlt	.-12     	; 0x8d8 <.L12^B1>

000008e4 <.L14^B1>:
 8e4:	86 95       	lsr	r24
 8e6:	77 95       	ror	r23
 8e8:	67 95       	ror	r22
 8ea:	b7 95       	ror	r27
 8ec:	f7 95       	ror	r31
 8ee:	e7 95       	ror	r30
 8f0:	9f 5f       	subi	r25, 0xFF	; 255
 8f2:	c1 f7       	brne	.-16     	; 0x8e4 <.L14^B1>

000008f4 <.L15^B1>:
 8f4:	fe 2b       	or	r31, r30
 8f6:	88 0f       	add	r24, r24
 8f8:	91 1d       	adc	r25, r1
 8fa:	96 95       	lsr	r25
 8fc:	87 95       	ror	r24
 8fe:	97 f9       	bld	r25, 7
 900:	08 95       	ret

00000902 <__fp_inf>:
 902:	97 f9       	bld	r25, 7
 904:	9f 67       	ori	r25, 0x7F	; 127
 906:	80 e8       	ldi	r24, 0x80	; 128
 908:	70 e0       	ldi	r23, 0x00	; 0
 90a:	60 e0       	ldi	r22, 0x00	; 0
 90c:	08 95       	ret

0000090e <__fp_nan>:
 90e:	9f ef       	ldi	r25, 0xFF	; 255
 910:	80 ec       	ldi	r24, 0xC0	; 192
 912:	08 95       	ret

00000914 <__fp_pscA>:
 914:	00 24       	eor	r0, r0
 916:	0a 94       	dec	r0
 918:	16 16       	cp	r1, r22
 91a:	17 06       	cpc	r1, r23
 91c:	18 06       	cpc	r1, r24
 91e:	09 06       	cpc	r0, r25
 920:	08 95       	ret

00000922 <__fp_pscB>:
 922:	00 24       	eor	r0, r0
 924:	0a 94       	dec	r0
 926:	12 16       	cp	r1, r18
 928:	13 06       	cpc	r1, r19
 92a:	14 06       	cpc	r1, r20
 92c:	05 06       	cpc	r0, r21
 92e:	08 95       	ret

00000930 <__fp_round>:
 930:	09 2e       	mov	r0, r25
 932:	03 94       	inc	r0
 934:	00 0c       	add	r0, r0
 936:	11 f4       	brne	.+4      	; 0x93c <.L1^B1>
 938:	88 23       	and	r24, r24
 93a:	52 f0       	brmi	.+20     	; 0x950 <.L3^B1>

0000093c <.L1^B1>:
 93c:	bb 0f       	add	r27, r27
 93e:	40 f4       	brcc	.+16     	; 0x950 <.L3^B1>
 940:	bf 2b       	or	r27, r31
 942:	11 f4       	brne	.+4      	; 0x948 <.L2^B1>
 944:	60 ff       	sbrs	r22, 0
 946:	04 c0       	rjmp	.+8      	; 0x950 <.L3^B1>

00000948 <.L2^B1>:
 948:	6f 5f       	subi	r22, 0xFF	; 255
 94a:	7f 4f       	sbci	r23, 0xFF	; 255
 94c:	8f 4f       	sbci	r24, 0xFF	; 255
 94e:	9f 4f       	sbci	r25, 0xFF	; 255

00000950 <.L3^B1>:
 950:	08 95       	ret

00000952 <_exit>:
 952:	f8 94       	cli

00000954 <__stop_program>:
 954:	ff cf       	rjmp	.-2      	; 0x954 <__stop_program>
