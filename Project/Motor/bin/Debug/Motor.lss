
bin\Debug\Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000002a4  00000338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002a4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  0000033b  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000058  00000000  00000000  00000390  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000d59  00000000  00000000  000003e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000c30  00000000  00000000  00001141  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000264  00000000  00000000  00001d71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000114  00000000  00000000  00001fd8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    0000052c  00000000  00000000  000020ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 000000fc  00000000  00000000  00002618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__vector_21>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 17 01 	jmp	0x22e	; 0x22e <__vector_23>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 48 01 	call	0x290	; 0x290 <main>
  f8:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init_timer>:
#define LPWM PL5 // 44
#define RPWM PL3 // 46
#define v5 PA0 // 22

void init_timer(void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
    // Mode 0, Prescaler = 64
    TCCR0A = 0;
 108:	84 e4       	ldi	r24, 0x44	; 68
 10a:	90 e0       	ldi	r25, 0x00	; 0

0000010c <.Loc.2>:
 10c:	fc 01       	movw	r30, r24
 10e:	10 82       	st	Z, r1

00000110 <.Loc.3>:
    TCCR0B = (0 << CS02) | (1 << CS01) | (1 << CS00);
 110:	85 e4       	ldi	r24, 0x45	; 69
 112:	90 e0       	ldi	r25, 0x00	; 0

00000114 <.Loc.4>:
 114:	23 e0       	ldi	r18, 0x03	; 3
 116:	fc 01       	movw	r30, r24
 118:	20 83       	st	Z, r18

0000011a <.Loc.5>:

    // 5-% duty cycle (0 - 255) = (0% - 100%)
    OCR0A = 127;
 11a:	87 e4       	ldi	r24, 0x47	; 71
 11c:	90 e0       	ldi	r25, 0x00	; 0

0000011e <.Loc.6>:
 11e:	2f e7       	ldi	r18, 0x7F	; 127
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18

00000124 <.Loc.7>:

    // Interrupt op OCA en OVF
    TIMSK0 = (1 << OCIE0A) | (1 << TOIE0);
 124:	8e e6       	ldi	r24, 0x6E	; 110
 126:	90 e0       	ldi	r25, 0x00	; 0

00000128 <.Loc.8>:
 128:	23 e0       	ldi	r18, 0x03	; 3
 12a:	fc 01       	movw	r30, r24
 12c:	20 83       	st	Z, r18

0000012e <.Loc.9>:
}
 12e:	00 00       	nop
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <init_pins>:

void init_pins(void)
{
 136:	cf 93       	push	r28
 138:	df 93       	push	r29
 13a:	cd b7       	in	r28, 0x3d	; 61
 13c:	de b7       	in	r29, 0x3e	; 62

0000013e <.Loc.11>:
    // Lampjes voor test
    DDRB |= (1 << PB6);
 13e:	84 e2       	ldi	r24, 0x24	; 36
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	fc 01       	movw	r30, r24
 144:	20 81       	ld	r18, Z
 146:	84 e2       	ldi	r24, 0x24	; 36
 148:	90 e0       	ldi	r25, 0x00	; 0

0000014a <.Loc.12>:
 14a:	20 64       	ori	r18, 0x40	; 64
 14c:	fc 01       	movw	r30, r24
 14e:	20 83       	st	Z, r18

00000150 <.Loc.13>:

    // Zet de PWM pins 44 en 46 als output en zet ze uit
    DDRL |= (1 << LPWM) | (1 << RPWM);
 150:	8a e0       	ldi	r24, 0x0A	; 10
 152:	91 e0       	ldi	r25, 0x01	; 1
 154:	fc 01       	movw	r30, r24
 156:	20 81       	ld	r18, Z
 158:	8a e0       	ldi	r24, 0x0A	; 10
 15a:	91 e0       	ldi	r25, 0x01	; 1

0000015c <.Loc.14>:
 15c:	28 62       	ori	r18, 0x28	; 40
 15e:	fc 01       	movw	r30, r24
 160:	20 83       	st	Z, r18

00000162 <.Loc.15>:
    PORTL &= ~(1 << LPWM) & ~(1 << RPWM);
 162:	8b e0       	ldi	r24, 0x0B	; 11
 164:	91 e0       	ldi	r25, 0x01	; 1
 166:	fc 01       	movw	r30, r24
 168:	20 81       	ld	r18, Z

0000016a <.Loc.16>:
 16a:	8b e0       	ldi	r24, 0x0B	; 11
 16c:	91 e0       	ldi	r25, 0x01	; 1

0000016e <.Loc.17>:
 16e:	27 7d       	andi	r18, 0xD7	; 215
 170:	fc 01       	movw	r30, r24
 172:	20 83       	st	Z, r18

00000174 <.Loc.18>:

    // Zet pin 22 als output
    DDRA |= (1 << v5);
 174:	81 e2       	ldi	r24, 0x21	; 33
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	fc 01       	movw	r30, r24
 17a:	20 81       	ld	r18, Z
 17c:	81 e2       	ldi	r24, 0x21	; 33
 17e:	90 e0       	ldi	r25, 0x00	; 0

00000180 <.Loc.19>:
 180:	21 60       	ori	r18, 0x01	; 1
 182:	fc 01       	movw	r30, r24
 184:	20 83       	st	Z, r18

00000186 <.Loc.20>:

    // Zet de pins van knop 1 als pull-up
    DDRF |= (1 << PF1);
 186:	80 e3       	ldi	r24, 0x30	; 48
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	fc 01       	movw	r30, r24
 18c:	20 81       	ld	r18, Z
 18e:	80 e3       	ldi	r24, 0x30	; 48
 190:	90 e0       	ldi	r25, 0x00	; 0

00000192 <.Loc.21>:
 192:	22 60       	ori	r18, 0x02	; 2
 194:	fc 01       	movw	r30, r24
 196:	20 83       	st	Z, r18

00000198 <.Loc.22>:
    PORTF |= (1 << PF1);
 198:	81 e3       	ldi	r24, 0x31	; 49
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	fc 01       	movw	r30, r24
 19e:	20 81       	ld	r18, Z
 1a0:	81 e3       	ldi	r24, 0x31	; 49
 1a2:	90 e0       	ldi	r25, 0x00	; 0

000001a4 <.Loc.23>:
 1a4:	22 60       	ori	r18, 0x02	; 2
 1a6:	fc 01       	movw	r30, r24
 1a8:	20 83       	st	Z, r18

000001aa <.Loc.24>:
}
 1aa:	00 00       	nop
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	08 95       	ret

000001b2 <init>:

void init(void)
{
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	cd b7       	in	r28, 0x3d	; 61
 1b8:	de b7       	in	r29, 0x3e	; 62

000001ba <.Loc.26>:
    init_pins();
 1ba:	0e 94 9b 00 	call	0x136	; 0x136 <init_pins>

000001be <.Loc.27>:
    init_timer();
 1be:	0e 94 80 00 	call	0x100	; 0x100 <init_timer>

000001c2 <.Loc.28>:
    sei();
 1c2:	78 94       	sei

000001c4 <.Loc.29>:
}
 1c4:	00 00       	nop
 1c6:	df 91       	pop	r29
 1c8:	cf 91       	pop	r28
 1ca:	08 95       	ret

000001cc <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 1cc:	1f 92       	push	r1
 1ce:	0f 92       	push	r0
 1d0:	0f b6       	in	r0, 0x3f	; 63
 1d2:	0f 92       	push	r0
 1d4:	11 24       	eor	r1, r1
 1d6:	0b b6       	in	r0, 0x3b	; 59
 1d8:	0f 92       	push	r0
 1da:	2f 93       	push	r18
 1dc:	8f 93       	push	r24
 1de:	9f 93       	push	r25
 1e0:	ef 93       	push	r30
 1e2:	ff 93       	push	r31
 1e4:	cf 93       	push	r28
 1e6:	df 93       	push	r29
 1e8:	cd b7       	in	r28, 0x3d	; 61
 1ea:	de b7       	in	r29, 0x3e	; 62

000001ec <.Loc.31>:
    PORTL &= ~(1 << RPWM);
 1ec:	8b e0       	ldi	r24, 0x0B	; 11
 1ee:	91 e0       	ldi	r25, 0x01	; 1
 1f0:	fc 01       	movw	r30, r24
 1f2:	20 81       	ld	r18, Z

000001f4 <.Loc.32>:
 1f4:	8b e0       	ldi	r24, 0x0B	; 11
 1f6:	91 e0       	ldi	r25, 0x01	; 1

000001f8 <.Loc.33>:
 1f8:	27 7f       	andi	r18, 0xF7	; 247
 1fa:	fc 01       	movw	r30, r24
 1fc:	20 83       	st	Z, r18

000001fe <.Loc.34>:
    DDRB &= ~(1 << PB6);
 1fe:	84 e2       	ldi	r24, 0x24	; 36
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	fc 01       	movw	r30, r24
 204:	20 81       	ld	r18, Z

00000206 <.Loc.35>:
 206:	84 e2       	ldi	r24, 0x24	; 36
 208:	90 e0       	ldi	r25, 0x00	; 0

0000020a <.Loc.36>:
 20a:	2f 7b       	andi	r18, 0xBF	; 191
 20c:	fc 01       	movw	r30, r24
 20e:	20 83       	st	Z, r18

00000210 <.Loc.37>:
}
 210:	00 00       	nop
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	ff 91       	pop	r31
 218:	ef 91       	pop	r30
 21a:	9f 91       	pop	r25
 21c:	8f 91       	pop	r24
 21e:	2f 91       	pop	r18
 220:	0f 90       	pop	r0
 222:	0b be       	out	0x3b, r0	; 59
 224:	0f 90       	pop	r0
 226:	0f be       	out	0x3f, r0	; 63
 228:	0f 90       	pop	r0
 22a:	1f 90       	pop	r1
 22c:	18 95       	reti

0000022e <__vector_23>:

ISR(TIMER0_OVF_vect)
{
 22e:	1f 92       	push	r1
 230:	0f 92       	push	r0
 232:	0f b6       	in	r0, 0x3f	; 63
 234:	0f 92       	push	r0
 236:	11 24       	eor	r1, r1
 238:	0b b6       	in	r0, 0x3b	; 59
 23a:	0f 92       	push	r0
 23c:	2f 93       	push	r18
 23e:	8f 93       	push	r24
 240:	9f 93       	push	r25
 242:	ef 93       	push	r30
 244:	ff 93       	push	r31
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	cd b7       	in	r28, 0x3d	; 61
 24c:	de b7       	in	r29, 0x3e	; 62

0000024e <.Loc.39>:
    PORTL |= (1 << RPWM);
 24e:	8b e0       	ldi	r24, 0x0B	; 11
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	fc 01       	movw	r30, r24
 254:	20 81       	ld	r18, Z
 256:	8b e0       	ldi	r24, 0x0B	; 11
 258:	91 e0       	ldi	r25, 0x01	; 1

0000025a <.Loc.40>:
 25a:	28 60       	ori	r18, 0x08	; 8
 25c:	fc 01       	movw	r30, r24
 25e:	20 83       	st	Z, r18

00000260 <.Loc.41>:
    DDRB |= (1 << PB6);
 260:	84 e2       	ldi	r24, 0x24	; 36
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	fc 01       	movw	r30, r24
 266:	20 81       	ld	r18, Z
 268:	84 e2       	ldi	r24, 0x24	; 36
 26a:	90 e0       	ldi	r25, 0x00	; 0

0000026c <.Loc.42>:
 26c:	20 64       	ori	r18, 0x40	; 64
 26e:	fc 01       	movw	r30, r24
 270:	20 83       	st	Z, r18

00000272 <.Loc.43>:
}
 272:	00 00       	nop
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	ff 91       	pop	r31
 27a:	ef 91       	pop	r30
 27c:	9f 91       	pop	r25
 27e:	8f 91       	pop	r24
 280:	2f 91       	pop	r18
 282:	0f 90       	pop	r0
 284:	0b be       	out	0x3b, r0	; 59
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <main>:

int main(void)
{
 290:	cf 93       	push	r28
 292:	df 93       	push	r29
 294:	cd b7       	in	r28, 0x3d	; 61
 296:	de b7       	in	r29, 0x3e	; 62

00000298 <.Loc.45>:
    init();
 298:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <init>

0000029c <.L7>:
    while(1)
 29c:	00 00       	nop
 29e:	fe cf       	rjmp	.-4      	; 0x29c <.L7>

000002a0 <_exit>:
 2a0:	f8 94       	cli

000002a2 <__stop_program>:
 2a2:	ff cf       	rjmp	.-2      	; 0x2a2 <__stop_program>
